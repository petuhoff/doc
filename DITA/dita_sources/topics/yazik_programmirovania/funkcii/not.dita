<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_v4b_tyc_rf">
  <title>not</title>
  <shortdesc>Оператор целочисленного или логического отрицания.</shortdesc>
<body>
  <section><title>Синтаксис:</title><codeblock>c = <funcname>not</funcname> expr;</codeblock></section>
  <section><title>Аргументы:</title><p><codeph>expr</codeph> – выражение для логического отрицания или число для целочисленного отрицания.</p></section>
<section><title>Описание:</title>
<p><codeph>not</codeph> – оператор целочисленного или логического отрицания. 
При операции логического отрицания  выражение expr может содержать любые математические или логические операции.
Результат математической или логической операции будет логическая переменная, имеющая значение «ДА» или «НЕТ». 
После операции логического отрицания переменная, имеющая значение «ДА», сменит его на «НЕТ», и наоборот.
Результирующая переменная должна иметь тип <codeph>boolean</codeph>.
Применение операции отрицания к данным целочисленных типов вызывает побитную инверсию (отрицание) соответствующего данному числу двоичного кода.</p></section>
<section><title>Результат:</title><p>c – результат операции.</p></section>  
<section><title>Пример:</title><codeblock><kword>var</kword>
c2:<rword>boolean</rword>,
c3:<rword>boolean</rword>
<kword>end</kword>
x = 78;
c1 = <funcname>not</funcname> x;
c2 = <funcname>not</funcname> (x&lt; 10);
c3 = <funcname>not</funcname> (x > 10);</codeblock></section>
<p>В результате переменной c1 будет присвоено значение -79. Число 78 занимает в памяти 2 байта и в двоичной форме имеет вид: 0000000001001110. При выполнении операции все 0 заменяются на 1, а 1 - на 0 соответственно. После выполнения операции not 78 получим: 1111111110110001, что соответствует числу -79 в десятичной форме.</p>
<p>Переменной c2 будет присвоено значение «НЕТ», переменной c3 будет присвоено значение «ДА».</p>   
  </body>
</topic>
