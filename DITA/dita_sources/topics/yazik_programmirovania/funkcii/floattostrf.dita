<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_v4b_tyc_rf">
<title>floattostrf</title>
<shortdesc>Функция формирования строки заданного формата из переменной с плавающей
    запятой.</shortdesc>
<body>
<section>
      <title>Синтаксис:</title>
      <codeblock>str = <funcname>floattostrf</funcname>(x, type, par1, par2);</codeblock>
    </section>
<section>
      <title>Аргументы:</title>
      <p>x – входная переменная, число с плавающей запятой,</p>
      <p>type – формат формируемой строки,</p>
      <p>par1 – первый параметр формата формируемой строки,</p>
      <p>par2 – второй параметр формата формируемой строки.</p>
    </section>
<section><title>Описание:</title>
<p><codeph>floattostrf(x, type, par1, par2)</codeph> – функция формирует строку заданного формата из
        переменной <codeph>x</codeph> типа «число с плавающей запятой». Переменная
          <codeph>х</codeph> должна быть типа <codeph>double</codeph>. Если количество цифр в
        формируемой строке меньше количества цифр исходного числа, число округляется. Переменная
          <codeph>type</codeph> определяет формат вывода: <ol id="ol_ex3_sv2_xx">
          <li>Формат автоматический (general). <codeph>type</codeph> = 0. Число преобразовывается в
            наиболее возможно короткую десятичную строку, используя фиксированный (fixed) или
            научный формат (scientific). Нули в конце числа удаляются. Десятичная точка ставится
            только в случае необходимости. Фиксированный формат применяется, когда в значении числа
            количество цифр, стоящих слева от десятичной точки, меньше либо равно par1 или, когда
            значение числа >= 0.00001. В противном случае, применяется научный формат, а параметр
            par2 определяет минимальное число цифр в экспоненте (0.. 4).</li> <li>Формат научный (scientific). <codeph>type</codeph> = 1. <codeph>par1</codeph> – количество
            значащих цифр мантиссы, минимальное значение – 2 цифры; <codeph>par2</codeph> –
            количество значащих цифр экспоненты, минимальное значение – 1 цифра. Число преобразуется
            в строку формата "-x.xxx…E+xxxx". Строка начинается со знака "-" (если число
            отрицательное). Десятичной точке всегда предшествует одна цифра. Параметр
              <codeph>par1</codeph> определяет общее количество десятичных цифр, стоящих до символа
            экспоненты "E" (включая цифру слева от десятичного разделителя). За символом экспоненты
            следует знак плюс или минус и до 4 цифр, определяющих степень экспоненты. Минимальное
            число цифр в экспоненте указывается в параметре <codeph>par1</codeph>.</li><li>Формат фиксированный (fixed). <codeph>type</codeph> = 2. <codeph>par1</codeph> – общее
            количество значащих цифр, минимальное значение – 2 цифры; <codeph>par2</codeph> –
            количество цифр после запятой. Значение преобразуется в строку вида "-ххх.ххх…". Если
            число отрицательное, то впереди строки будет поставлен знак "-". Десятичной точке всегда
            предшествует минимум одна цифра. Количество значащих цифр после десятичной точки (0…18)
            указывается в параметре <codeph>par2</codeph>. Если количество разрядов слева от
            разделителя превышает значение, указанное в параметре <codeph>par1</codeph>, то для
            форматирования будет использоваться научный формат (ffExponent).</li>
          <li>Формат финансовый (number). <codeph>type</codeph> = 3. <codeph>par1</codeph> – общее
            количество значащих цифр, минимальное значение – 2 цифры; <codeph>par2</codeph> –
            количество цифр после запятой. Значение преобразуется в строку вида "-x ххх.ххх…". Если
            число отрицательное, то впереди строки будет поставлен знак "-". Группы по 3 разряда
            отделяются друг от друга пробелом. Десятичной точке всегда предшествует минимум одна
            цифра. Количество значащих цифр после десятичной точки (0…18) указывается в параметре
              <codeph>par2</codeph>. Если количество разрядов слева от разделителя превышает
            значение, указанное в параметре <codeph>par1</codeph>, то для форматирования будет
            использоваться научный формат (ffExponent).</li><li>Формат денежный (сurrency). <codeph>type</codeph> = 4. <codeph>par1</codeph> – общее количество
            значащих цифр, минимальное значение – 2 цифры; <codeph>par2</codeph> – количество цифр
            после запятой. Значение преобразуется в строку вида "-x ххх.ххх… ₽". Если число
            отрицательное, то впереди строки будет поставлен знак "-". Группы по 3 разряда
            отделяются друг от друга пробелом. После последней цифры, через пробел, ставится знак
            валюты. Десятичной точке всегда предшествует минимум одна цифра. Количество значащих
            цифр после десятичной точки (0…18) указывается в параметре <codeph>par2</codeph>. Если
            количество разрядов слева от разделителя превышает значение, указанное в параметре
              <codeph>par1</codeph>, то для форматирования будет использоваться научный формат
            (ffExponent). </li>
        </ol></p></section>
<section>
      <title>Результат:</title>
      <p>str – сформированная строка.</p>
    </section>  
<section><title>Пример:</title>
<codeblock><kword>var</kword>
x1:<rword>double</rword> = 3.14159,
x2:<rword>double</rword> = 31.4159,
x3:<rword>double</rword> = 1314.159;
<comment>//сформируем строку из переменной в формате general</comment>
s1 = <funcname>floattostrf</funcname>(x1, 0, 4, 0); <comment>// «3.142» </comment>         
s2 = <funcname>floattostrf</funcname>(x2, 0, 2, 0); <comment>// «31»</comment>             
s3 = <funcname>floattostrf</funcname>(x3, 0, 2, 0); <comment>// «1.3E3»</comment>          
<comment>//сформируем строку из переменной в формате scientific</comment>
s4 = <funcname>floattostrf</funcname>(x3, 1, 3, 2); <comment>// «1.31E+03»</comment>          
<comment>//сформируем строку из переменной в формате fixed     </comment>
s5 = <funcname>floattostrf</funcname>(x3, 2, 4, 3); <comment>// «1314.000» </comment>         
s6 = <funcname>floattostrf</funcname>(x3, 2, 6, 3); <comment>// «1314.160»</comment>          
s7 = <funcname>floattostrf</funcname>(x3, 2, 1, 3); <comment>// « 1.3E003»</comment>                                                                
<comment>//сформируем строку из переменной в формате number    </comment>
s8 = <funcname>floattostrf</funcname>(x3, 3, 4, 3); <comment>// «1 314.000»         </comment>
s9 = <funcname>floattostrf</funcname>(x3, 3, 6, 3); <comment>// «1 314.160»         </comment>
s10 = <funcname>floattostrf</funcname>(x3, 3, 1, 3); <comment>// «1.3E003»          </comment>
<comment>//сформируем строку из переменной в формате currency  </comment>
s11 = <funcname>floattostrf</funcname>(x3, 4, 4, 3); <comment>// «1 314.000 ₽»      </comment>
s12 = <funcname>floattostrf</funcname>(x3, 4, 6, 3); <comment>// «1 314.160 ₽»      </comment>
s13 = <funcname>floattostrf</funcname>(x3, 4, 1, 3); <comment>// «1.3E003»          </comment></codeblock></section>
<p>В результате переменная <codeph>s1</codeph> будет содержать строку «3.142», переменная
        <codeph>s2</codeph> будет содержать строку «31», переменная <codeph>s3</codeph> будет
      содержать строку «1.3E3», переменная <codeph>s4</codeph> будет содержать строку «1.31E+03»,
      переменная <codeph>s5</codeph> будет содержать строку «1314.000», переменная
        <codeph>s6</codeph> будет содержать строку «1314.160», переменная <codeph>s7</codeph> будет
      содержать строку «1.3E003», переменная <codeph>s8</codeph> будет содержать строку «1 314.000»,
      переменная <codeph>s9</codeph> будет содержать строку «1 314.160», переменная
        <codeph>s10</codeph> будет содержать строку «1.3E003», переменная <codeph>s11</codeph> будет
      содержать строку «1 314.000 ₽», переменная <codeph>s12</codeph> будет содержать строку «1
      314.160 ₽», переменная <codeph>s13</codeph> будет содержать строку «1.3Е003». </p>  
  </body>
</topic>
