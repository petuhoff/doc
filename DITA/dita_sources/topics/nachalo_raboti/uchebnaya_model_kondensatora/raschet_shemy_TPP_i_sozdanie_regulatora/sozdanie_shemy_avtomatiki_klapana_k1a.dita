<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_x5n_gv5_qf">
  <title><b><ph id="_Toc327135792">
        <b><ph id="_Toc327135800">Создание схемы автоматики клапана К1А</ph></b></ph></b></title>
  <body>
    <p>Поскольку схему автоматики мы создаем для гидравлической модели и будем в дальнейшем их
      соединять друг с другом, то нам нужно создать базу сигналов, через которую и будет в
      дальнейшем происходить обмен данными между двумя проектами.</p>
    <table id="table_qsx_nq2_qy">
      <tgroup cols="2">
        <colspec colnum="1" colname="col1"/>
        <colspec colnum="2" colname="col2"/>
        <tbody>
          <row>
            <entry>
              <p><image href="../images/04-02-sdb-dll.png" height="270" width="444" id="image_rsx_nq2_qy"
                /></p>
              <p>Рисунок 60 – Подключение базы сигналов к проекту</p>
            </entry>
            <entry>
              <p>Создайте новую схему автоматики: для этого выберите пункт меню «Файл → Новый проект
                → Схема автоматики». Для дальнейшей работы необходимо сохранить данную схему в файле
                с новым именем и в каталоге где создавалась модель гидравлики. </p>
              <p>По умолчанию схемы математических моделей предназначены для автономной отладки и не
                содержат в себе базы данных сигналов. Однако к любой схеме в SimInTech можно
                подключить базу данных сигналов для организации внешнего взаимодействия с другими
                программами и векторной обработки сигналов.</p>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <p>Подключение базы данных сигналов к схеме автоматики осуществляется следующим образом:</p>
    <p>1) На схемном окне нажать кнопку «<b>Параметры проекта</b>».</p>
    <p>2) В появившемся диалоговом окне настроек перейти на закладку «Настройки».</p>
    <p>3) В строке редактирования «Модуль базы данных проекта» необходимо ввести следующий текст:
      $(Root)\sdb.dll (sdb.dll – имя динамической библиотеки программного модуля базы данных).</p>
    <p>4) В строке редактирования «Имя базы данных проекта» надо ввести произвольное имя файла для
      сохранения базы данных. Например: signals_ktz.db (В случае, когда не прописывается полный путь
      к файлу, по умолчанию считается, что он расположен в том же каталоге, что и файл проекта).</p>
    <p>5) Закрыть диалоговое окно нажатием кнопки «Ок».</p>
    <p>6) Выполнить сохранение текущего проекта, нажав кнопку сохранить на главном окне
      программы.</p>
    <p>После этих действий станет доступным пункт меню «Инструменты → База данных». Именно здесь и
      осуществляется работа по наполнению и редактированию базы данных сигналов – с помощью модуля
      «Редактор базы данных».</p>
    <p><b>Внимание!</b> Для проектов, в которых не используется база данных, данный пункт меню
      является недоступным. Чтобы получить доступ к этому пункту меню, необходимо выполнить
      последовательность действий, описанную в разделе Подключение базы данных сигналов. </p>
    <p>После выбора пункта меню появляется диалоговое окно редактора базы данных проекта.</p>
    <p>Более подробно интерфейс базы сигналов рассмотрен в 10 учебных заданиях.</p>
    <p>Напомним здесь концепцию, заложенную в базу сигналов SDB, а именно: окно редактора содержит
      три основные панели:</p>
    <p>· Категории</p>
    <p>· Группы сигналов</p>
    <p>· Сигналы и данные для групп.</p>
    <p>Панель «Категории» содержит <b>список типов</b> объектов, которые могут быть помещены в базу
      данных. Например, БУЗ – блок управления задвижкой.</p>
    <p>Панель «Группы сигналов» содержит <b>список объектов</b>, соответствующих выбранному типу
      (категории), имеющийся в базе данных проекта. Например, <b>1L01AS1</b> – код конкретной
      задвижки, существующий в базе данных и математической модели объекта. Под объектом
      подразумевается группа сигналов, отнесенная к этому объекту.</p>
    <p>Панель «Сигналы и данные для групп» содержит <b>таблицу с сигналами</b>, соответствующими
      конкретной группе сигналов, выбранной в панели Группы сигналов.</p>
    <p>Пользователь может самостоятельно создавать, редактировать и удалять новые категории
      объектов, состав объектов в каждом проекте, а также список и значение сигналов.</p>
    <p><image href="../images/04-02-sdb-empty.png" height="417" width="887" id="image_ssx_nq2_qy"/></p>
    <p>Рисунок 61 – Окно редактора базы данных проекта</p>
    <p>По умолчанию для вновь создаваемого проекта, все панели редактора не содержат элементов.
      Пользователь может как самостоятельно наполнить базу данных, так и осуществить считывание
      файла с уже существующей базой данных.</p>
    <p>Добавление новой категории осуществляется следующим образом: пользователь должен нажать
      кнопку «Добавить категорию» в нижней части панели. После этого в списке категорий появляется
      новая запись «Новая категория».</p>
    <p>Двойной клик на элементе «Новая категория» открывает диалоговое окно редактирования категории
        (<b>Ошибка! Источник ссылки не найден.</b>). В данном диалоговом окне пользователь заполняет
      таблицу сигналов, которые соответствуют выбранной категории. Например, для задвижки это могут
      быть вещественное значение положения штока, двоичное значение сигнала «открыта» или «закрыта»
      и т. д.</p>
    <p>В данной учебной методике мы <b>не будем</b> создавать полностью алгоритм управления всеми
      клапанами – нам важно разобраться и понять принцип построения моделей и схем автоматики и
      каким образом схему автоматики можно связать с проектом гидравлической модели через базу
      данных.</p>
    <p>В процессе создания гидравлической модели мы создали два датчика – один измеряет расход в
      канале через ТО БЭЖ, другой – уровень воды в конденсаторе. Давайте для наших учебных целей и
      для наглядного примера на основе показания одного из датчиков (расходомера на ТО БЭЖ) создадим
      учебный алгоритм управления клапаном К1А. <b>Сигналы в базу данных заводите самостоятельно,
        основываясь на дальнейших рисунках.</b></p>
    <p>Алгоритм построим на простейшей схеме – будем сравнивать показание датчика с заданным
      расходом, и в зависимости от рассогласования заданного и текущего расхода – алгоритм будет
      подавать сигналы на закрытие или открытие клапана. Чтобы обмениваться сигналами между
      гидравлической схемой и схемой автоматики, нам потребуется на схеме гидравлики записывать в
      базу данных значение расхода через ТО БЭЖ, на схеме автоматики – считывать его из базы данных,
      и, на основе алгоритма управления, вырабатывать сигналы на закрытие и/или открытие клапана.
      Исполнительный механизм будем моделировать простейшим интегратором с ограничением (от 0 до
      100%).</p>
    <p> </p>
    <table id="table_tsx_nq2_qy">
      <tgroup cols="2">
        <colspec colnum="1" colname="col1"/>
        <colspec colnum="2" colname="col2"/>
        <tbody>
          <row>
            <entry>
              <p><image href="../images/04-02-submodel-k1a.png" height="286" width="408"
                  id="image_usx_nq2_qy"/></p>
              <p><ph id="_Ref447800604">Рисунок </ph>62 – Субструктура с алгоритмом автоматики</p>
            </entry>
            <entry>
              <p>Для начала, давайте вернемся к окну схемы автоматики, разместим на нем первую
                субструктуру, которую следует подписать как «Управление и модель клапана К1А»
                (Рисунок 62) и разместить внутри субструктуры два элемента – элемент чтения из
                списка сигналов и элемент записи в список (Рисунок 63).</p>
              <p>Теперь следует указать, какой именно сигнал мы читаем из базы данных и какой
                записываем. Зайдите в свойства элемента «Чтение из списка сигналов». Следует
                изменить свойство «Имена сигналов». Для этого воспользуйтесь кнопкой слева внизу
                диалогового окошка свойств (кнопка называется «Найти значение в базе»). В следующем
                окне надо выбрать категорию «Датчики», далее датчик расхода «G» и имя сигнала «XQ02»
                (создайте предварительно этот сигнал в БД!).</p>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <p>По нажатию на кнопку «Добавить», появится новая строка в этой табличке. Таким образом мы
      выбрали сигнал, который будет прочитываться из базы данных на каждом шаге расчета схемы.
      Обратите внимание, что имя сигнала состоит из названия объекта, затем символ подчеркивания и
      название сигнала в объекте – в нашем случае сигнал называется «G_XQ02».</p>
    <table id="table_vsx_nq2_qy">
      <tgroup cols="2">
        <colspec colnum="1" colname="col1"/>
        <colspec colnum="2" colname="col2"/>
        <tbody>
          <row>
            <entry>
              <p><image href="../images/04-02-submodel-k1a-in-out.png" height="330" width="596"
                  id="image_wsx_nq2_qy"/></p>
              <p><ph id="_Ref447800605">Рисунок </ph>63 – Элементы чтения и записи в список
                сигналов</p>
            </entry>
            <entry>
              <p>Для записи сигнала «Положение клапана К1А» в базу данных, нам сначала следует
                создать объект К1А в базе данных. Если вы еще не создали категорию «Задвижки»,
                создайте её, и затем добавьте в базу данных один объект такого типа с названием
                «К1А» или сразу все (три) задвижки.</p>
              <p>После этого в свойствах элемента «Запись в список сигналов» выберите сигнал
                «Положение» у объекта «К1А» (название сигнала – K1A_XQ01). Теперь схема автоматики
                должна иметь вид, представленный на рисунке (Рисунок 65).</p>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <p><image href="../images/04-02-select-g-xq02.png" height="450" width="950" id="image_xsx_nq2_qy"
      /></p>
    <p>Рисунок 64 – Добавление сигнала расхода в схему автоматики</p>
    <table id="table_ysx_nq2_qy">
      <tgroup cols="2">
        <colspec colnum="1" colname="col1"/>
        <colspec colnum="2" colname="col2"/>
        <tbody>
          <row>
            <entry>
              <p><ph id="_Ref447801286"><image href="../images/04-02-submodel-k1a-in-out-filled.png"
                    height="330" width="596" id="image_zsx_nq2_qy"/></ph></p>
              <p><ph id="_Ref447801344">Рисунок </ph>65 – Запись и чтение из списка сигналов,
                заполненные</p>
            </entry>
            <entry>
              <p>Что касается передачи сигналов в схему автоматики и из нее в базу данных – это все,
                но остался еще один момент - нам нужно связать значение положения клапана в базе
                данных и в объекте на гидравлической схеме. Перейдите в окно гидравлической схемы,
                подключите её также в базе сигналов если она еще не подключена, и зайдите в свойства
                клапана К1А. Там выберите свойство «Положение, %», нажмите кнопку внизу слева «Найти
                значение в базе данных» и в появившемся окне базы данных найдите сигнал
                «К1А_xq01».</p>
              <p> </p>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <p>Добавьте этот сигнал в таблицу «Выбранные данные» и нажмите кнопку «Ок». Теперь значение
      положения клапана для схемы TPP будет считываться из базы данных на каждом шаге
      синхронизации.</p>
    <p>Давайте еще раз рассмотрим в целом, как работает база данных. Вообще говоря, база данных
      представляет собой просто массив сигналов (таблицу) в памяти SimInTech, в которой записан
      сплошной список сигналов. Условно этот список классифицируется на типы объектов и объекты со
      «своими» сигналами. Когда мы разместили на схеме TPP датчик расхода и уровня воды в
      конденсаторе, то в базе данных появилось два новых сигнала (две новые строки в общей таблице
      сигналов). Это произошло автоматически без нашего участия (данный нюанс может изменяться в
      зависимости от версии ПО) – мы просто разместили элементы на схеме TPP. Далее в другом проекте
      – в схеме автоматики, мы с помощью элемента чтения сигнала из списка «вытаскиваем» значение
      нужного нам сигнала (расход через ТО БЭЖ), и сейчас будем его использовать для сравнивающего
      устройства в схеме автоматики. На выходе из схемы автоматики мы формируем сигнал, который
      будет характеризовать положение клапана К1А, и значение этого сигнала мы записываем в базу
      данных (пока еще не в схему TPP, а просто в общую таблицу сигналов записываем значение
      положения клапана TPP). Далее уже на схеме TPP мы используем значение этого сигнала –
      положение клапана К1А – для соответствующего свойства клапана. Важно помнить, что для того
      чтобы такая схема работала, нужно чтобы оба проекта использовали общую базу данных сигналов (в
      нашем случае это файл <b>signals_ktz.db</b>).</p>
    <p>Вернемся снова к схеме автоматики – нам нужно набрать упрощенную схему управления
      исполнительным механизмом клапана К1А (включая и сам механизм). Попробуйте самостоятельно
      набрать схему, как показано на рисунке:</p>
    <p><image href="../images/04-02-submodel-k1a-version-1.png" height="426" width="922"
        id="image_atx_nq2_qy"/></p>
    <p>Рисунок 66 – Схема управления клапаном К1А, первая версия</p>
    <p>Рассмотрим алгоритм действия данной схемы: сигнал с датчика расхода сравнивается с заданным
      значением расхода и разница (рассогласование) подается на усилитель с подобранным
      коэффициентом усиления (точнее ослабления, прикидочное значение = 0,5). Далее ослабленный
      сигнал рассогласования, поступает на ПИД-регулятор (также с подобранными коэффициентами) и
      сумма выходов ПИД-регулятора передается в релейный блок с зоной нечувствительности (величину
      зоны можно установить в +1, -1, зона возврата = 0,5). Если на выходе из релейного блока сигнал
      равен 0, то клапан находится без движения. Если после реле сигнал «-1», то как бы подается
      сигнал «Закрыть», если «+1», то – «Открыть». Интегратор с ограничением моделирует
      исполнительный механизм (двигатель) клапана.</p>
    <p>Таким образом реализован простейший алгоритм, поддерживающий заданный расход через ТО БЭЖ. В
      реальности, конечно, схема может быть сложней, в т.ч. состоять из нескольких листов и
      использовать субструктуры. Для наших целей пока что это не нужно, а важно понять, что проект
      автоматики работает как еще один расчетный слой, параллельно проекту гидравлики TPP, и эти два
      проекта (расчетных слоя) могут обмениваться сигналами через базу данных.</p>
    <p>Давайте зададим нужные коэффициенты на схеме алгоритма, ниже последовательно перечислены
      свойства элементов, которые нужно задать:</p>
    <ul id="ul_btx_nq2_qy">
      <li> Уставка для расхода через ТО БЭЖ: <b>30</b> (свойство «а» элемента «Константа»).</li>
      <li> Сравнивающее устройство: <b>[1, -1</b><b>]</b>.</li>
      <li> Общий коэффициент усиления: <b>0.5</b> (первое приближение).</li>
      <li> ПИД, коэффициент усиления: <b>2</b>.</li>
      <li> ПИД, интегратор: <b>0.07</b>.</li>
      <li> ПИД, инерционно-дифференцирующее звено: коэффициент <b>5</b>, постоянная времени
        <b>3</b>, начальные условия <b>0</b>.</li>
      <li> Сумматор: <b>[1,1,1]</b>.</li>
      <li> Реле с зоной нечувствительности: «<b>-1</b>», «<b>-0.8</b>», «<b>0.8</b>», «<b>1</b>»,
          «<b>-1</b>», «<b>1</b>».</li>
      <li> Интегратор с ограничением: «<b>100/25</b>», «<b>0</b>», «<b>100</b>», «<b>75</b>».</li>
    </ul>
    <p>Данные параметры подобраны таким образом, чтобы система автоматики клапана «К1А» поддерживала
      на стационарном уровне расход через ТО БЭЖ, т.е. на уровне «30», как это и происходит в нашем
      расчете гидравлической схемы с расходом подпитки «160». Подчеркнем, что сейчас в нашу задачу
      не входит полное создание схемы автоматики, нам нужно научиться создавать и понимать механизм
      параллельной (совместной) работы двух проектов через общую базу данных.</p>
    <p>Интегратор с ограничением моделирует двигатель клапана, с быстродействием ~ 4% в секунду, или
      (что тоже самое) время полного открытия = 25 секунд.</p>
    <p>Релейное звено моделирует в нулевом приближении блок управления клапаном.</p>
    <p>Представленный регулятор обладает рядом несовершенств, которые мы устраним позже.</p>
  </body>
</topic>
