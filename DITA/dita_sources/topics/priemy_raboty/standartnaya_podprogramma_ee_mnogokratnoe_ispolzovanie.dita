<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_x5n_gv5_qf">
  <title>Стандартная подпрограмма, её многократное использование</title>
  <shortdesc>Определено понятие стандартной подпрограммы, ситуации, в которых возникает
    необходимость ее применения, и рассмотрены возможности ее использования.</shortdesc>
  <body>
    <p>При совместной работе над проектом нескольких групп разработчиков может возникнуть ситуация,
      когда каждый из разработчиков в разрабатываемых схемах задействует одинаковый алгоритм. При
      этом у групп разработчиков могут быть разные библиотеки, с которыми они работают и в которые
      нежелательно внесение новых блоков. В этом случае используется способ обращения к т.н.
      «стандартной подпрограмме». </p>
    <p>Стандартная подпрограмма является специально и отдельно набранным алгоритмом в виде
      блок-схемы, сохраненной в отдельном файле проекта, который появляется в блоке «Субмодель»
      проекта пользователя, в случае привязки блока к файлу, в котором хранится стандартная
      подпрограмма. Другими словами, стандартная подпрограмма – это отдельный небольшой лист с
      алгоритмом, хранимым в своем файле проекта. </p>
    <p>Есть два способа создания стандартной подпрограммы: </p>
    <ul id="ul_w1n_xvv_ry">
      <li>1) Создание и сохранение нового проекта со схемой;</li>
      <li>2) Создание подпрограммы на основе ранее созданного блока типа «Субмодель»;</li>
    </ul>
    <p>В первом способе пользователь просто создает проект, в котором разрабатывает нужную для себя
      и других пользователей схему, а потом сохраняет ее с уникальным именем, для того, чтобы можно
      было с ней связаться. Во втором способе пользователь сначала разрабатывает новый блок на
      основе блока «Субмодель», а потом сохраняет его. </p>
    <ul id="ul_x1n_xvv_ry">
      <li>1) Создать блок, который будет базовым для подпрограммы (в качестве примера можно
        рассмотреть ранее созданный нами блок «Субмодель БОЛЬШЕ»);</li>
      <li>2) Одиночным кликом правой кнопки мыши на блок вызвать выпадающее меню;</li>
      <li>3) Затем пройти по пути «<b>Действия</b>» → «<b>Сохранить и связать с файлом</b>» (см.
          <b>Рисунок 1</b>);</li>
      <li><image href="standart_subroutine_images/image001.png" height="238" width="500"
          id="image_y1n_xvv_ry"/></li>
    </ul>
    <p><b>Рисунок 1. Путь для сохранения содержимого субмодели в файл</b></p>
    <ul id="ul_z1n_xvv_ry">
      <li>4) В появившемся диалоговом окне задать каталог и имя файла для сохранения и
        сохранить.</li>
    </ul>
    <p>Для того, чтобы связать новый блок «Субмодель» с файлом нужно выполнить следующие
      действия:</p>
    <ul id="ul_abn_xvv_ry">
      <li>1) Поставить новый блок «Субмодель» на схему;</li>
      <li>2) Добавить в блок, при необходимости, нужные свойства (иначе при загрузке содержимого
        выпадет ошибка о невозможности использования данных свойств);</li>
      <li>3) Одиночным кликом правой кнопки мыши на блок вызвать выпадающее меню;</li>
      <li>4) Затем пройти по пути «<b>Действия</b>» → «<b>Связать с файлом</b>» (см. <b>Рисунок
          2</b>);</li>
      <li><image href="standart_subroutine_images/image002.png" height="238" width="500"
          id="image_bbn_xvv_ry"/></li>
    </ul>
    <p><b>Рисунок 2. Путь в меню для связи субмодели с файлом</b></p>
    <ul id="ul_cbn_xvv_ry">
      <li>5) Изменить внешний вид субмодели (по желанию).</li>
    </ul>
    <p>Субмодель, связанная с такой подпрограммой, будет при каждом открытии обновлять внутреннее
      содержимое в соответствии с тем, что находится в сохраненном файле, при этом конечному
      пользователю не нужно будет производить никаких дополнительных действий по обновлению этой
      субмодели – все будет происходить автоматически.</p>
  </body>
</topic>
