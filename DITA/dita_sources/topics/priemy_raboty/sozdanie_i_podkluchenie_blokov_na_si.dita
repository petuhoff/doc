<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_x5n_gv5_qf">
  <title>Создание блоков на языке Си </title>
  <shortdesc>Генерация кода Си и подключение сторонней библиотеки </shortdesc>
  <body>
    <p>Среда динамического моделирования технических систем SimInTech является открытой средой,
      обеспечивающей также расширение существующих моделирующих библиотек блоков или создание новых
      библиотек, путем создания блоков на любом языке программирования, в том числе и на языке Си.
      Один из наиболее быстрых способов создания собственных блоков на языке Си — использование
      готовых шаблонов кода, входящих в дистрибутив. </p>
    <p>Шаблоны SimInTech по умолчанию настроены таким образом, чтобы пользователь мог получить
      готовую DLL с минимальными затратами времени на дополнительную настройку средств компиляции. В
      частности, в поставку включены шаблоны генерации кода и предварительно настроенные
      компиляторы, что значительно ускоряет создание как программ в виде DLL для Windows, так и
      исполняемого кода для аппаратуры управления различных производителей.</p>
    <p>В случае, когда пользователь использует собственные средства создания программы, включая
      среду разработки и компилятор, необходимо настроить рабочие директории для совместной работы
      среды SimInTech и пользовательских средств разработки. При этом в качестве первого приближения
      можно использовать исходные коды, созданные встроенными средствами генерации кода.</p>
    <p> </p>
    <p><b>Пример – заготовка блока</b></p>
    <p>В качестве примера будет рассмотрено создание нового блока методом прямой генерации кода.
      Один из типовых вариантов схем для этого представлен на рисунке 1.</p>
    <p> </p>
    <p><image href="C_blocks_creation_using_images/image001.png" height="374" width="830"
        id="image_ilz_clw_ry"/></p>
    <p><b>Рисунок 1. Пример создания блока для генерации на языке Си.</b></p>
    <p> </p>
    <p>Генерация кода будет происходить для блока номер 2 на схеме, типа «Язык Программирования»
      который на каждом шаге расчета выполняет вычисление по формуле:</p>
    <p><b>y</b><b> = </b><b>sin</b><b> (</b><b>x</b><b>*</b><b>w</b><b>)</b>, где</p>
    <p><b>у</b> – выход блока;</p>
    <p><b>x</b> – вход блока;</p>
    <p><b>w</b> – параметр (свойство), задаваемый пользователем.</p>
    <p>Для определения параметров будущей DLL, мы используем специальные блоки:</p>
    <p>Два блока типа<i> «Входной контакт </i><i>S</i><i>3» </i>(1 и 0).</p>
    <p><b>Input</b><b>:0</b> – будет создан порт входа в блок.</p>
    <p><b>Property</b><b>:w - </b>будет использовано значение свойства “w” будущего блока.</p>
    <p>Один блок типа <i>«Выходной контакт </i><i>S</i><i>3» </i>(3).</p>
    <p><b>Output:0</b> – будет создан один выход из блока.</p>
    <p> </p>
    <p>Внутри блока 2 находится скрипт, подготовленный к генерации кода Си. В тексте данного скрипта
      пользователь может сформировать любой код с использованием данных, задаваемых на схеме.
      Например, можно генерировать код, который использует имена блоков, задаваемых пользователем
      при создании схемы. Пользователь меняет данные на схеме и получает изменения в коде для
      загрузки в контроллер.</p>
    <p>Рассмотрим скрипт блока «Язык программирования» в среде SimInTech. Между ключевыми словами
      секции инициализации (<b>initialization</b> и <b>end;</b>) находится основной текст для
        <b>генерации кода Си.</b></p>
    <p>На рисунке 2 представлена часть, описывающая процесс замены специальных символов в тексте на
      значения из расчетной схемы.</p>
    <p> </p>
    <p><image href="C_blocks_creation_using_images/image002.png" height="485" width="729"
        id="image_jlz_clw_ry"/></p>
    <p><b>Рисунок 2. Текст комментариев для пояснения значений шаблона.</b></p>
    <p> </p>
    <p><image href="C_blocks_creation_using_images/image003.png" height="506" width="728"
        id="image_klz_clw_ry"/></p>
    <p><b>Рисунок 3. Текст основной части для генерации на коде Си.</b></p>
    <p> </p>
    <p>В нашем случае заполняется только секция расчета выхода по входу.</p>
    <p><b>out:0 – </b>выход;</p>
    <p><b>input:0 – </b>первый входной порт на схеме (см рисунок 1);</p>
    <p><b>input:1 – </b>второй входной порт в блоке на схеме (значение, задаваемое в свойствах
      будущего блока) (см. рисунок 1).</p>
    <p> </p>
    <p><b>Генерация кода Си</b></p>
    <p>Для настройки генерации кода необходимо настроить параметры кодогенерации, включая выбор
      требуемого шаблона. Пункт главного меню <i>«Кодогенератор»</i>. Диалоговое окно настройки
      кодогенератора представлено на рисунке 4. На данном рисунке выделен шаблон генерации кода, для
      компиляции с помощью среды Visual Studio 2008.</p>
    <p> </p>
    <image href="C_blocks_creation_using_images/image004.png" height="286" width="420"
      id="image_mlz_clw_ry"/>
    <ul id="ul_llz_clw_ry">
      <li><b>Рисунок 4. Окно настройки параметров генерации кода.</b><p>После настройки шаблона
          необходимо сгенерировать программу. Для этого выбираем в главном окне пункт меню
            <i>«Инструменты»</i> подпункт сгенерировать программу<i> «Сгенерировать программу»
          </i>(см. рисунок 5).</p><image href="C_blocks_creation_using_images/image005.png"
          height="248" width="386" id="image_nlz_clw_ry"/><p><b>Рисунок 5. Пункт меню сгенерировать
            программу.</b></p>В результате работы генератора кода произойдет создание всех
        необходимых файлов исходных кодов для компиляции dll c использованием Visual Studio 2008. В
        окне сообщений будет выведена информация как на рисунке 6. <p><image
            href="C_blocks_creation_using_images/image006.png" height="79" width="623"
            id="image_olz_clw_ry"/></p><b>Рисунок 6. Сообщения о создании исходных кодов</b>
        <p>Если в системе установлено ПО Visual Studio 2008, то будет выполнена компиляция
          библиотеки и размещение ее в той же папке, где и исходный проект.</p>Если средства
        компиляции не установлены, то будет выведено следующее окно с предупреждением об отсутствии
        необходимых компонентов (см. рисунок 7). <image
          href="C_blocks_creation_using_images/image007.png" height="319" width="624"
          id="image_plz_clw_ry"/><p><b>Рисунок 7. Окно с предупреждением об отсутствии средств
            компиляции </b><b>dll</b><b>.</b></p><b>Работа с текстами Си.</b><p>Вне зависимости от
          того, есть ли у вас соответствующий компилятор, исходный код уже сгенерирован, подготовлен
          для компиляции и помещен в соответствующую папку. </p>Имя dll задается в параметре расчета
        (кнопка «Параметры расчета», см. рисунок 8), по умолчанию имя задано как «my_diagram».
            <p><image href="C_blocks_creation_using_images/image008.png" height="150" width="472"
            id="image_qlz_clw_ry"/></p><b>Рисунок 8. Задание имя </b><b>dll</b><b> в параметрах
          расчета.</b>
        <p>Для шаблона под Visual Studio 2008, исходные тексты будут помещены папку
          C:\SimInTech\bin\CodeTemplates\VC2008. Состав папки представлен на рисунке 9</p></li>
    </ul>
    <p><image href="C_blocks_creation_using_images/image009.png" height="207" width="623"
        id="image_slz_clw_ry"/></p>
    <p><b>Рисунок 9. Папка с шаблоном генерации кода Си для </b><b>Visual</b><b>Studio</b><b> 2008,
        </b><b>src</b><b> – папка с исходными кодами на языке Си.</b></p>
    <p>Данная папка (VC2008) настроена на автоматическое создание dll, и содержит командные файлы
      для запуска процедуры создания dll из исходных кодов.</p>
    <p>Для работы с текстами Си и их ручной правки необходимо перенести всю папку вместе с ее
      содержимым в другую рабочую директорию, где будет происходить непосредственно разработка
      блока.</p>
    <p>Исходные коды, непосредственно отвечающие за выполнение математического расчета, находятся в
      папке <i>src</i>.</p>
    <p>В частности, непосредственно вычисление функции блока <b>y</b><b> = </b><b>sin</b><b>
        (</b><b>x</b><b>*</b><b>w</b><b>)</b>, находится в файле prog.inc (см. рисунок 10). </p>
    <image href="C_blocks_creation_using_images/image010.png" height="308" width="623"
      id="image_tlz_clw_ry"/>
    <ul id="ul_rlz_clw_ry">
      <li><b>Рисунок 10. Участок кода Си, осуществляющий расчет функции блока.</b>
        <p>Для формирования уникальных имен переменных при автоматической генерации кода
          используются имена алгоритма, имена блоков и номера блоков. </p>Пользователь может
        самостоятельно менять код на Си для реализации собственной библиотеки блоков. И
        компилировать без использования командного файла, в том числе в режиме сторонней среды
        программирования. <p><b>Использование созданной </b><b>dll</b><b> в проекте
            </b><b>SimInTech</b><b>.</b></p>Для использования сгенерированной dll необходимо
        использовать специальный блок. Пример соответствующей структурной схемы проекта приведена на
        рисунке 10.<p><image href="C_blocks_creation_using_images/image011.png" height="108"
            width="388" id="image_ulz_clw_ry"/></p><b>Рисунок 11 структурная схема для подключения
          </b><b>dll</b><b>.</b><p>Данная схема работает следующим образом:</p>1) Блок с часами
        формирует сигнал, соответствующий модельному времени.<p>2) Этот сигнал подается на блок,
          который мы тестируем.</p>3) Блок производит вычисление выхода.<p>4) Сигнал выхода блока
          отображается на графике.</p></li>
    </ul>
    <p>Для подключения dll использован блок «<i>Внешняя </i><i>dll</i>», распложенный в закладке
        <i>«Субструктуры»</i>.</p>
    <p>Свойства блока приведены на рисунке 11.</p>
    <p> </p>
    <p><image href="C_blocks_creation_using_images/image012.png" height="279" width="623"
        id="image_vlz_clw_ry"/></p>
    <p><b>Рисунок 12. Настройка блока «Внешняя </b><b>dll</b><b>».</b></p>
    <p> Задается количество портов, их размерности (на вход в блок может быть подан вектор), а также
      указывает имя библиотеки dll, которую нужно загрузить во время расчета. </p>
    <p>Для обеспечения работы блока с библиотекой, созданной на основе сгенерированного на
      предыдущих шагах кода, необходим дополнительный параметр w, который пользователь задает в
      свойствах блока. Чтобы добавить его к стандартному блоку, необходимо:</p>
    <p>1) выделить блок на схеме;</p>
    <p>2) выбрать в главном окне пункт меню «<i>Правка</i>», подпункт «<i>Изменить блок</i>»
      (SimInTech должен находится в режиме разработчика);</p>
    <p>3) в диалоговом окне добавить новое свойство с именем «w» (см. рисунок 12). </p>
    <image href="C_blocks_creation_using_images/image013.png" height="163" width="623"
      id="image_xlz_clw_ry"/>
    <ul id="ul_wlz_clw_ry">
      <li><b>Рисунок 13. Добавление параметра блока, задаваемого пользователем.</b>
        <p>Если запустить файл проекта «Загрузчик.prt» на расчет, то будет подгружена
          my_diagram.dll. Необходимым условием является нахождение файла dll библиотеки в том же
          каталоге, что и файл проекта, в котором она будет использована.</p>В данной библиотеке
        происходит вычисление выхода по формуле у=sin(w*x), где х – это модельное время, подаваемое
        на вход, w – параметр, задаваемый пользователем в настройках блока.<p>Пользователь во время
          расчета может войти в свойства блока DLL и менять параметр w, на графике соответствующим
          образом будет меняться частота колебаний (см. рисунок 13).</p><image
          href="C_blocks_creation_using_images/image014.png" height="313" width="623"
          id="image_ylz_clw_ry"/></li>
      <li><b>Рисунок 14. Тестирование блока, созданного в виде </b><b>dll</b><b>, на языке
          Си.</b><p>Таким образом, в рамках приема работы были описаны действия по созданию и
          использованию простейшего блока на языке Си. Аналогичным образом могут быть разработаны и
          подключены собственные блоки.</p></li>
    </ul>
  </body>
</topic>
