<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_x5n_gv5_qf">
  <title>Создание видеокадра, подключающегося к модели (к её расчету)</title>
  <shortdesc>Возможности создания визуализационных кадров в среде SimInTech. </shortdesc>
  <body>
    <p>Для визуализации и подачи информации пользователю в наиболее удобном для восприятия формате,
      а также для создания виртуальных пультов (щитов) управления, создаются динамические
      графические изображения (имеющие доступ к сигналам комплексной модели или проекта), которые
      чаще всего называются видеокадрами. Среда разработки SimInTech позволяет не только
      разрабатывать расчетные схемы, но и создавать видеокадры дли расчетных схем, с применением
      технической анимации и организацией человеко-машинного интерфейса. Видеокадры позволяют
      визуализировать расчетные параметры схем в удобном для отображения виде, вывести инструменты
      управления (например, ключи запуска оборудования, кнопки задатчиков регуляторов) для изменения
      значения переменных в расчете в том объеме, который необходим конечному пользователю продукта.
      Видеокадры могут полностью повторить структуру пульта или панели реального объекта, что
      используется при создании аналитических тренажеров для различных объектов энергетического
      комплекса, таких как АЭС.</p>
    <p>Видеокадры могут существовать и создаваться в разных парадигмах, например: </p>
    <ul id="ul_f5q_31w_ry">
      <li>1. Отдельно от модели – видеокадр в этом случае представляет собой отдельный блок, либо
        схему в отдельном файле;</li>
      <li>2. В пакетном режиме – как вместе с моделью, так и отдельно от нее. В случае совместного
        запуска разработанные видеокадры в виде блоков либо схем находятся вместе с файлами модели в
        одном пакете и инициализируются при запуске модели, соответственно и обновление параметров
        происходит так же при запуске модели. Модель и видеокадры при этом представляют собой единый
        целый проект.</li>
    </ul>
    <p>В случае отдельного запуска каждый видеокадр является отдельным проектом, который
      пользователь сохраняет в отдельном файле. При этом видеокадр подключается к модели асинхронно,
      и только в тот момент, когда это нужно пользователю.</p>
    <p>SimInTech содержит инструменты разработки видеокадров, поэтому пользователь может создавать
      как расчетные схемы, так и кадры визуализации для этих схем. Разработка видеокадров
      осуществляется с помощью панели примитивов (см. <b>Рисунок 1</b>) и специально разработанных
      блоков, которые могут быть уникальными для каждого проекта. </p>
    <p><image href="videoframe_images/image001.jpg" height="69" width="436" id="image_g5q_31w_ry"
      /></p>
    <p>Рисунок 1. Внешний вид панели примитивов</p>
    <p>С помощью примитивов вычерчивается «скелет» схемы, например, схема трубопроводов или схема
      электрической коммутации, а специализированные блоки отвечают за вывод информации (т.е. могут
      представлять собой визуальные имитаторы датчиков), за управление и анимацию оборудования
      (например, задвижек/клапанов/насосов/вентиляторов и пр.) и т.д.</p>
    <p>Этапы разработки видеокадра:</p>
    <ul id="ul_h5q_31w_ry">
      <li>1. Определяется содержание видеокадра (на этом этапе содержание предварительное,
        уточняться оно будет в процессе работы над видеокадром);</li>
      <li>2. По предварительному содержанию создается «скелет» видеокадра при помощи примитивов и
        библиотечных блоков, определяется потребность в уникальных для данного видеокадра блоков,
        при необходимости такие блоки создаются;</li>
      <li>3. Уникальные блоки расставляются на «скелет» видеокадра;</li>
      <li>4. Пишутся скрипты для видеокадра (например, скрипты, для связи видеокадра с моделью,
        скрипты для изменения визуального отображения примитивов и пр.);</li>
      <li>5. Уникальные блоки на кадре параметризируются. По выполнении этого этапа уже можно
        подключать видеокадр к модели и пошагово отлаживать его;</li>
      <li>6. Производится окончательная проверка изображения на видеокадре и его правка при
        необходимости, убирается первоначальный «скелет» Видеокадр, который получится в результате
        завершения этого этапа, визуально будет представлять собой то, что увидит конечный
        пользователь продукта;</li>
      <li>7. Окончательное тестирование блоков, проверка правильности показаний, проверка
        правильности анимации блоков.</li>
    </ul>
    <p>Отладка (или тестирование) представляет собой проверку всех режимов работы с видеокадром и
      содержащимися на нем блоками, которые будут доступны конечному пользователю продукта, с целью
      определения правильности работы этих режимов/блоков. При этом тестируются все заложенные
      разработчиком функциональные возможности режимов работы и блоков.</p>
    <p>Рассмотрим в качестве примера создание видеокадра «Многофункциональный регистратор». Данный
      видеокадр предназначен для визуального отображения приходящих на него значений, уставок, а
      также других параметров. </p>
    <p>Итак, пройдем по этапам разработки:</p>
    <ul id="ul_i5q_31w_ry">
      <li>1. Для начала определимся с типом визуализации отображения. Отображение информации на
        данном видеокадре должно быть, как цифровым, т.е. пользователь должен видеть приходящее
        значение в виде численной величины, так и графическим, т.е. величина должна отображаться в
        виде графика в зависимости от времени. Кроме того, должна быть визуализация перехода
        значения за уставки;</li>
      <li>2. Создаем «скелет» видеокадра. Первоначально «скелет» видеокадра создается при помощи
        примитива «Линия» / «Полилиния». После первоначального вычерчивания лист проекта выглядит
        таким образом (см. <b>Рисунок 2</b>):<image href="videoframe_images/image002.jpg"
          height="501" width="620" id="image_j5q_31w_ry"/></li>
    </ul>
    <p>Рисунок 2. Первоначальный «скелет» блока.</p>
    <p>Далее на данный видеокадр навешиваются примитивы, создающие «подложку» анимированных
      составляющих видеокадра. После наполнения примитивами скелета лист проекта выглядит так (см.
        <b>Рисунок 3</b>):</p>
    <p><image href="videoframe_images/image003.jpg" height="524" width="649" id="image_k5q_31w_ry"
      /></p>
    <p>Рисунок 3. Внешний вид видеокадра после наполнения его примитивами.</p>
    <p> </p>
    <p>На данном этапе стало ясно, что нужны два уникальных блока: первый должен отвечать за
      численное отображение величин, приходящих в регистратор, второй должен отвечать за построение
      графической зависимости величины от времени. Создаем необходимые нам блоки с внутренними
      скриптами;</p>
    <p> 3. Расставляем уникальные блоки на видеокадре (см. <b>Рисунок 4</b>);<image
        href="videoframe_images/image004.jpg" height="503" width="623" id="image_m5q_31w_ry"/></p>
    <p>Рисунок 4. Внешний вид видеокадра после добавления уникальных блоков</p>
    <ul id="ul_n5q_31w_ry">
      <li>4. Производим написание необходимых скриптов (см. <b>Рисунок 5</b>)<image
          href="videoframe_images/image005.jpg" height="398" width="501" id="image_o5q_31w_ry"
        /></li>
    </ul>
    <p>Рисунок 5. Часть скрипта, необходимого для правильной работы видеокадра</p>
    <ul id="ul_p5q_31w_ry">
      <li>5. Параметризуем уникальные блоки (см. <b>Рисунок 6</b>).<image
          href="videoframe_images/image006.png" height="503" width="623" id="image_q5q_31w_ry"
        /></li>
    </ul>
    <p>Рисунок 6. Внешний вид видеокадра после добавления уникальных блоков</p>
    <ul id="ul_r5q_31w_ry">
      <li>6. Убираем на видеокадре все лишнее, добавляем необходимые детали (см. <b>Рисунок
          7</b>).<image href="videoframe_images/image007.jpg" height="503" width="623"
          id="image_s5q_31w_ry"/><p>Рисунок 7. Финальный вид видеокадра перед окончательной
          проверкой</p></li>
      <li>7. Производим окончательное тестирование блоков, визуальное отображение примитивов,
        скрипты. При соответствии исходному заданию создание видеокадра можно считать
        завершенным.</li>
    </ul>
  </body>
</topic>
