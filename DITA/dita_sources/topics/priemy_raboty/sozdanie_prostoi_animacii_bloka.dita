<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_x5n_gv5_qf">
  <title>Создание простой анимации блока. </title>
  <shortdesc>Описание процесса создания простой графической визуализации блока. </shortdesc>
  <body>
    <p>Анимация блоков довольно существенно упрощает работу с расчетной схемой, что особенно заметно
      при работе со сложными разветвленными схемами с большим количеством расчетных блоков.
      Например, при работе с расчетными схемами для теплогидравлических сетей очень часто необходимо
      знать в каком состоянии находится то или иное оборудование: включены или выключены насосы,
      закрыты или открыты задвижки; проконтролировать положение регулирующих клапанов, проверить
      текущие параметры схемы. Для схем алгоритмов важно знать в каком состоянии находятся
      функциональные блоки, например, такие как триггеры, а также значения передаваемые по линиям
      связи. Электрические схемы должны отображать состояние такого оборудования, как выключатели,
      двигатели и пр.</p>
    <p>В случае небольших схем простой топологии это, конечно, можно осуществить и без визуализации
      блоков, просто просматривая результаты расчета блоков, тем самым создавая цельную картину
      расчета схемы. Однако даже в таком случае создание цельной картины расчета схемы возможно лишь
      при проведении стационарных режимов, где параметры слабо меняются с течением времени, или
      нестационарных режимов с медленным развитием процесса (развитие процесса занимает десятки
      минут и выше). При динамичном же нестационарном режиме, когда развитие какого-либо процесса
      занимает секунды, за расчетными параметрами блоков уследить практически невозможно, что
      приводит к невозможности анализа и управления пользователем данного процесса.</p>
    <p>В случае же крупных схем с разветвленной топологией и большим количеством моделируемого
      оборудования провести наблюдения за ходом расчета без визуализации блоков невозможно.</p>
    <p> </p>
    <p>Прежде чем визуализировать расчетный блок, необходимо определиться с ответами на следующие
      вопросы:</p>
    <ul id="ul_nfd_5hw_ry">
      <li>· какие расчетные параметры должны быть визуализированы?</li>
      <li>· каким образом будет осуществлена визуализация: с помощью отображения расчетных
        параметров блока (например, для реализации непрерывного отображения параметров расчетных
        узлов, показаний датчиков и пр.), с помощью цветовой индикации, с помощью изменения
        графического изображения блока, и т.п.?</li>
      <li>· будет ли понятной конечному пользователю блока вносимая визуализация? </li>
    </ul>
    <p>После ответов на данные вопросы можно приступать к визуализации блока. </p>
    <p>Процесс визуализации блока предусматривает следующие этапы редактирования блока:</p>
    <ul id="ul_ofd_5hw_ry">
      <li>1. Внесение дополнительных свойств, параметров, локальных переменных для блоков – при
        необходимости;</li>
      <li>2. Внесение дополнительных примитивов – так же при необходимости;</li>
      <li>3. Написание скриптов визуализации блока;</li>
      <li>4. Тестирование блока на правильность работы визуализации;</li>
      <li>5. Занесение блока в библиотеку – в случае, если блоком пользуется не единичный
        пользователь.</li>
    </ul>
    <p>Прохождение данных этапов позволяет получить законченный блок с простой анимацией.</p>
    <p>В качестве примера рассмотрим процесс визуализации блока «HS – Простой насос», принадлежащего
      библиотеке HS.</p>
    <p>Исходный блок, находящийся в библиотеке, имеет такой вид (см. <b>Рисунок 1</b>):</p>
    <p><image href="visualisation_of_block_images/image001.png" height="485" width="512"
        id="image_pfd_5hw_ry"/></p>
    <p><b>Рисунок 1. Внешний вид блока «</b><b>HS</b><b> – Простой насос»</b></p>
    <p>Исходя из первичного визуального анализа данного блока становится понятно, что для
      пользователя необходима визуализация статуса насоса, т.е. включен или отключен насос.</p>
    <p>Теперь зайдем в свойства данного блока (см. <b>Рисунок 2</b>).</p>
    <p><image href="visualisation_of_block_images/image002.png" height="463" width="583"
        id="image_qfd_5hw_ry"/></p>
    <p><b>Рисунок 2. Свойства блока «</b><b>HS</b><b> – Простой насос»</b></p>
    <p>Из приведенной таблицы свойств видно, что свойство c именем «<b>w</b>» (и названием
        «<b>Частота вращения</b>») как раз и может помочь нам в визуализации данного блока: данное
      свойство отвечает за относительную частоту вращения насоса и изменяется от 0 до 1. Упрощенно
      примем, что при частоте вращения выше определенного уровня можно считать, что насос включен, а
      ниже того же уровня, что насос отключен. </p>
    <p>Теперь зайдем в редактор графической оболочки блока и рассмотрим примитивы, с помощью которых
      был сделан данный блок. Для этого необходимо перейти на закладку «<b>Общие</b>» →
        «<b>Графическое изображение</b>».</p>
    <p>Из нижеприведённых рисунков следует, что графическое изображение блока состоит из двух
      примитивов:</p>
    <ul id="ul_rfd_5hw_ry">
      <li>· примитива «<b>Круг</b>» (см. <b>Рисунок 3</b>)</li>
    </ul>
    <p> </p>
    <p><image href="visualisation_of_block_images/image003.png" height="654" width="611"
        id="image_sfd_5hw_ry"/></p>
    <p><b>Рисунок 3. Состав графического изображения блока – примитив «Круг»</b></p>
    <ul id="ul_tfd_5hw_ry">
      <li>· примитива «<b>Полигон</b>» (см. <b>Рисунок 4</b>)</li>
    </ul>
    <p><image href="visualisation_of_block_images/image004.png" height="654" width="611"
        id="image_ufd_5hw_ry"/></p>
    <p><b>Рисунок 4. Состав графического изображения блока – примитив «Полигон»</b></p>
    <p>Если выбирать между двумя примитивами, то наиболее заметным для пользователя при визуальном
      изменении будет примитив «<b>Круг</b>», значит с ним и желательно работать.</p>
    <p>Заходим в свойства примитива и решаем с какими будем работать (см. <b>Рисунок 5</b>).</p>
    <p> </p>
    <p><image href="visualisation_of_block_images/image005.png" height="568" width="439"
        id="image_vfd_5hw_ry"/></p>
    <p><b>Рисунок 5. Свойства графического примитива «Круг»</b></p>
    <p>Довольно очевидно, что наилучшим способом привлечь внимание пользователя при изменении
      статуса объекта является изменение цветового содержания примитива.</p>
    <p>За основной цвет примитива отвечает свойство<b>Color</b>, однако мы сделаем визуализацию
      нашего блока чуть более интересной и добавим градиент к основному цвету. За дополнительный
      цвет градиента отвечает свойство <b>GradientColor</b>.</p>
    <p>Общепринятой индикацией включенного насоса является красный цвет, а выключенного насоса –
      зеленый. </p>
    <p>Исходя из вышесказанного нам нужно составить такой скрипт, чтобы он влиял на изменение цвета
      примитива таким образом, чтобы во включенном состоянии он был красным, а в отключенном –
      зеленым.</p>
    <p>Пишем скрипт визуализации (см. <b>Рисунок 6</b>). Для того, чтобы зайти в редактор скрипта
      необходимо, находясь в графическом редакторе, пройти по пути «<b>Сервис</b>» →
      «<b>Скрипт…</b>»</p>
    <p><image href="visualisation_of_block_images/image006.png" height="495" width="624"
        id="image_wfd_5hw_ry"/></p>
    <p><b>Рисунок 6. Скрипт визуализации</b></p>
    <p>Для того, чтобы данный скрипт правильно необходимо еще добавить две локальных переменных в
        «<b>Сервис</b>» → «<b>Локальные переменные…</b>» (см. <b>Рисунок 7</b>), отвечающие за
      изменение цвета.</p>
    <p><image href="visualisation_of_block_images/image007.png" height="258" width="624"
        id="image_xfd_5hw_ry"/></p>
    <p><b>Рисунок 7. Локальные переменные для работы скрипта</b></p>
    <p>При необходимости добавляем либо изменяем в графическом изображении примитивы и сохраняем
      внесенные изменения. В итоге получается блок, изменяющий свой вид в соответствии со значением
      внутреннего свойства. На <b>рисунке 8</b> показан блок «HS – Простой насос» с относительной
      частотой вращения <b>w</b>, равной 1 (т.е. во включенном состоянии).</p>
    <p><image href="visualisation_of_block_images/image008.png" height="485" width="512"
        id="image_yfd_5hw_ry"/></p>
    <p><b>Рисунок 8. Блок «HS – Простой насос» с активированной визуализацией</b></p>
  </body>
</topic>
