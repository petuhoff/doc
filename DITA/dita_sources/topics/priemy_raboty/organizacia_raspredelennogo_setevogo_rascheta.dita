<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_x5n_gv5_qf">
  <title>Организация распределённого сетевого расчёта </title>
  <shortdesc>Описание процесса настройки расчета пакета или набора проектов на нескольких
    вычислительных узлах.</shortdesc>
  <body>
    <p>Постановка задачи: настроить и выполнить расчёт (моделирование) трёх проектов на отдельных
      компьютерах, с синхронизацией модельного времени и обменом данными через сеть TCP/IP.
      Управление расчетом (режимы «Пуск», «Пауза» и «Стоп», а также сохранение и загрузка исходных
      состояний) должно осуществляться с условно «главного» компьютера.</p>
    <p> Краткое описание решения: обмен данными через сеть и синхронизация модельного времени
      реализуется функциями базы данных сигналов SDB. Очередность запуска: инициализировать главный
      проект (с включенным сервером сетевого обмена), после этого инициализировать все клиенты
      (проекты с включенным удалённым обменом), далее нажать пуск на главном проекте. При этом все
      проекты (на разных вычислительных узлах) запустятся на расчёт.</p>
    <p>
      <u>Настройка сетевого расчёта в ручном режиме.</u></p>
    <p>В подразделе приведена пошаговая инструкция настройки сетевого расчета.</p>
    <ul id="ul_em2_zgw_ry">
      <li>1) Пошаговая инструкция основана на примере пакета KBA, который состоит из трех проектов,
        а именно: а) <b>«</b><b>kba</b><b>.</b><b>prt</b><b>»</b> - модель объекта (система
        подпитки-продувки 1 контура реактора типа ВВЭР), включая три насоса работающих в параллель,
        с задвижками на напоре насосов и линиях рециркуляции; б) <b>«Алгоритмы kba.prt» - </b>
        алгоритмы автоматического управления задвижками, сгруппированные по каждому из насосов; в)
          <b>«Блоки управления.prt»</b> - набор типовых блоков управления оборудованием (блок
        управления задвижками, блок управления клапанами, блок управления насосами, модель
        датчика).</li>
      <li>2) При моделировании на локальном компьютере проекты объединены в пакет
          <b>kba</b><b>.</b><b>pak</b>. Самый простой способ настройки распределенного сетевого
        расчёта – настроить выполнение каждого из проектов на своём вычислительном узле, без
        использования пакетного запуска. Один из вычислительных узлов будет главным, т.е. являться
        сервером сетевого обмена, другие – клиентами.</li>
      <li>3) Предположим, что у нас имеется локальная вычислительная сеть (с протоколом TCP/IP v4),
        три компьютера в которой имеют IP-адреса 192.168.5.1, 192.168.5.2 и 192.168.5.3
        соответственно. Настраивать распределённый расчёт будем таким образом, чтобы главным был
        компьютер 192.168.5.1, два других – клиентами. При этом на главном компьютере будет
        выполняться расчет модели объекта управления, на клиенте 192.168.5.2 – алгоритмы, на клиенте
        192.168.5.3 – блоки управления (см. рисунок 1).<image
          href="network_simulation_images/image001.png" placement="break" id="image_fm2_zgw_ry"
        />Рисунок 1. Структура распределённого сетевого расчёта.<p>Примечание: где именно проекты
          вычисляются, решающего значения не имеет, можно настраивать и по-другому.</p></li>
      <li>4) Для удобства, целесообразно настроить сетевой диск (ресурс) с разрешённым доступом к
        нему со всех трёх компьютеров чтобы можно было настраивать всё на одном компьютере. В нашем
        примере файлы будут храниться на сервере, клиенты имеют к ним доступ по сети (у них
        подключен сетевой диск F:\ который ссылается на папку C:\KMM сервера 192.168.5.1).</li>
      <li>5) Для настройки сервера сетевого обмена необходимо открыть проект kba.prt, зайти в
        настройки базы данных сигналов SDB и включить галку «Разрешить приём данных от клиентов».
        Порт приёма данных можно оставить тот, который стоит по-умолчанию (19000). Галочка «Включить
        удалённый обмен» должна быть выключена – это настройка для клиентов. Для примера см. рисунок
        2. После этого надо <b>пересохранить проект </b><b>kba</b><b>.</b><b>prt</b>, так как
        настройки сервера сетевого обмена и параметры клиента хранятся в проекте, а не в файле базы
        данных.</li>
      <li><image href="network_simulation_images/image002.png" height="269" width="510"
          id="image_gm2_zgw_ry"/></li>
      <li>Рисунок 2. Настройки сервера сетевого обмена 192.168.5.1 (kba.prt).</li>
      <li>6) Для настройки клиентов необходимо в оставшихся проектах («<b>Алгоритмы kba.prt</b>» и
          «<b>Блоки управления.prt</b>») в настройках базы данных сигналов включить галочку
          «<b>Включить удалённый обмен</b>», IP-адрес удалённого сервера обмена установить в
        192.168.5.1, в соответствии с адресом главного компьютера. Порт удалённого сервера обмена
        надо выставить тот же, который был настроен у сервера (т.е. 19000), порт приёма данных можно
        указать произвольный. Для порядка, укажем у второго компьютера порт приёма данных 19002, у
        третьего – 19003. В рассматриваемом примере это не критично т.к. у каждого из клиентов будет
        открыт всего лишь 1 порт и он может быть любым (в т.ч. и 19000, как у сервера). Разрешить
        приём данных от клиентов у клиентов тоже надо включить т.к. сервер будет обратно присылать
        на клиенты данные, вычисляемые как на сервере так и на других клиентах.</li>
      <li>7) Важно у каждого из клиентов установить галочку «Синхронизировать модельное время», для
        того чтобы расчёт шёл с синхронизацией модельного времени у сервера и у всех клиентских
        проектов. Настройки второго компьютера см. рисунок 3, третьего – рисунок 4.<image
          href="network_simulation_images/image003.png" placement="break" 
          id="image_hm2_zgw_ry"/></li>
      <li>Рисунок 3. Настройки клиента 192.168.5.2 (Алгоритмы kba.prt).<image
          href="network_simulation_images/image004.png" placement="break"
          id="image_im2_zgw_ry"/></li>
      <li>Рисунок 4. Настройки клиента 192.168.5.3 (Блоки управления.prt).</li>
      <li>8) После выполнения всех настроек и <b>пересохранения проектов,</b> для запоминания
        настроек, запуск на расчёт следует производить в следующем порядке:</li>
      <li>a. Инициализировать проект на сервере (расчетное время при этом установится в 0, статус =
          Старт).<image href="network_simulation_images/image005.png" placement="break"
          id="image_jm2_zgw_ry"/><p>Рисунок 5. Инициализация проекта-сервера.</p></li>
      <li>b. Инициализировать проект на клиенте 192.168.5.2. При этом проект не должен выдавать
        никаких ошибок.</li>
      <li>c. Инициализировать проект на клиенте 192.168.5.3. При этом проект также не должен
        выдавать никаких ошибок.</li>
      <li>d. После инициализации всех составляющих проектов, с гласного компьютера при нажатии
        кнопок <b>Пуск</b>, <b>Пауза</b> и <b>Стоп</b> аналогичные команды будут транслироваться на
        все клиенты.</li>
      <li>9) Нажав кнопку Пуск на главном компьютере, начнётся распределённый расчет, с
        синхронизацией модельного времени и обменом данными по сигналам базы данных SDB, см. рисунок
          6.<image href="network_simulation_images/image006.png" id="image_km2_zgw_ry"/>Рисунок 6.
        Распределённый расчет на трёх компьютерах.</li>
      <li><u>Настройка запуска сетевого расчёта в автоматизированном режиме</u></li>
    </ul>
    <p>Автоматизированный запуск распределённого расчёта возможен при совместном использовании двух
      вспомогательных утилит, входящих в SimInTech: «<b>Сервер удалённого расчёта</b>» и «<b>Утилита
        массового запуска и синхронизации</b>» (см. рисунок 7).</p>
    <image href="network_simulation_images/image007.png" height="408" width="294"
      id="image_mm2_zgw_ry"/>
    <ul id="ul_lm2_zgw_ry">
      <li>Рисунок 7. Сервер удалённого расчёта и утилита массового запуска.</li>
    </ul>
    <p>Сервер удалённого расчёта является небольшой программой, которая воспринимает команды
      поступающие по сети от утилиты массового запуска и синхронизации. Сервер удалённого расчёта
      необходимо запустить на каждом из компьютеров, участвующих в распределённом расчете (для
      удобства можно поместить его в автозапуск, см. рисунок 7). При его запуске появляется
      соответствующая иконка в области уведомлений Windows.</p>
    <p>Утилита массового запуска и синхронизации позволяет в автоматизированно режиме отправлять
      команды (для командной строки Windows) на исполнение нескольким адресатам (т.е. нескольким
      компьютерам в сети). Для целей распределённого расчета нам необходимо на каждом из компьютеров
      выполнить пуск SimInTech с соответствующим файлом проекта и опцией /start которая обеспечит
      инициализацию проектов.</p>
    <p>Предположим, что на главном компьютере (192.168.5.1) проект расположен в каталоге C:\KMM, на
      других – этот же каталог подключен как сетевой диск F:\ (см. рисунок 8).</p>
    <p><image href="network_simulation_images/image008.png" height="228" width="443"
        id="image_nm2_zgw_ry"/></p>
    <p>Рисунок 8. Настройки расположения проектов.</p>
    <p>В утилите массового запуска при такой организации расположения файлов нужно будет создать два
      шаблона запуска, а именно:</p>
    <ul id="ul_om2_zgw_ry">
      <li>· mstarter.exe “С:\KMM\%command%” /start;</li>
      <li>· mstarter.exe “F:\%command%” /start;</li>
    </ul>
    <p>(см. рисунок 9).</p>
    <p><image href="network_simulation_images/image009.png" height="453" width="552"
        id="image_pm2_zgw_ry"/></p>
    <p>Рисунок 9. Задание шаблонов команд.</p>
    <p>Задержку переключения лучше установить в 2000-3000 мсек – данная настройка обеспечивает паузу
      между отправкой команд на разные компьютеры. В нашем примере важно чтобы первый проект
      проинициализировался полностью до того, как будут инициализироваться последующие. Настройка
      определяется экспериментально (зависит от сложности проектов и скорости работы
      компьютеров).</p>
    <p>Далее, на вкладке «Экраны» следует задать три строки, как представлено на рисунке 10.</p>
    <p><image href="network_simulation_images/image010.png" height="293" width="552"
        id="image_qm2_zgw_ry"/></p>
    <p>Рисунок 10. Задание команд для различных вычислительных узлов (экранов).</p>
    <p>Кнопкой «Запустить все» обеспечивается последовательная отправка команд на соответствующие
      экраны, с задержкой в 2000 миллисекунд. После успешной инициализации, кнопками Пуск/Пауза/Стоп
      с главного компьютера возможно управление расчётом.</p>
    <p>Кнопкой «Выгрузить всё» обеспечивается завершение работы SimInTech на всех экранах
      (вычислительных узлах). По нажатию этой кнопки фактически отправлятся шаблон команды остановки
      на все вычислительные узлы.</p>
  </body>
</topic>
