<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_x5n_gv5_qf">
  <title>Генерация кода Си на основе математических вычислений с фиксированной точкой </title>
  <body>
    <p>В качестве примера используется регулятор уровня, созданный на основе библиотеки нечёткой
      логики в SimInTech. Данный пример находится в папке
        <i>“</i><i>..\SimInTech\Demo\Automatic\Нечёткая Логика\Фиксированная точка\</i><i>”</i></p>
    <p>Схема регулятора для генерации кода находится в файле <i>fl_controller_fp.</i><i>prt</i></p>
    <p>Схема для тестирования находится в файле
        <i>fuzzy_fix_point_dll_te</i><i>s</i><i>t.</i><i>prt</i></p>
    <p>На рисунке 1 представлена схема регулятора, подготовленная для генерации кода:</p>
    <p><image href="c_fixed_point_images/image001.png" height="277" width="829"
        id="image_rlm_fjw_ry"/></p>
    <p>Рисунок 1. Регулятор уровня на основе нечеткой логики</p>
    <p>Для получения вычислений с фиксированной точкой необходимо в настройках кодогенратора выбрать
      соответствующий шаблон генерации кода. Для этого необходимо выбрать в главном меню программы
      пункт «<i>Кодогенератор</i>», в появившемся диалоговом окне выбрать закладку
      «<i>Настройки</i>», и для директории шаблона кода выбрать в выпадающем меню строку:</p>
    <p>
      <b><i>«%codetemplates%FixPoint_16_16_MinGW_DLL\</i></b>».</p>
    <p>Данный шаблон обеспечивает создание кода с фиксированной точкой и его компиляцию в dll для
      тестирования расчета. На рисунке 2 представлен вид окна настройки генерации кода.</p>
    <p><image href="c_fixed_point_images/image002.png" height="483" width="581"
        id="image_slm_fjw_ry"/></p>
    <p>Рисунок 2. Настройка генерации кода расчета с фиксированной точкой</p>
    <p>Для сравнения работы кода с вычислениями с фиксированной точкой и стандартного способа с
      плавающей точкой создадим код из схемы, представленной на рисунке 1. Для задания имени файлов
      для генерации кода необходимо задать имя алгоритма. Выберите схему из которой мы будем
      генерировать код, сделайте ее окно активным, после этого выберите в главном окне пункт меню
        «<i>Расчет</i>» подпункт «<i>Параметры расчета</i>». Можно так же нажать на кнопку <image
        href="c_fixed_point_images/image003.png" height="20" width="24" id="image_tlm_fjw_ry"/>,
      непосредственно в схемном окне. В появившемся диалоговом окне установите имя алгоритма
        <b>fl_contr</b><b>о</b><b>ller_fp</b>,как показано на рисунке 3:</p>
    <p><image href="c_fixed_point_images/image004.png" height="297" width="578"
        id="image_ulm_fjw_ry"/></p>
    <p>Рисунок 3. Настройка имени файлов для генерации кода</p>
    <p>Нажмите кнопку «<i>Ок</i>» для сохранения параметров расчета и генерации кода из схемы.</p>
    <p>В главном окне программы выберите пункт «<i>Инструменты</i>» подпункт «<i>Сгенерировать
        программу</i>». Будет запущен модуль генерации кода, в случае когда модуль не
      зарегистрирован, будет выдано предупреждение. </p>
    <p>Для схем содержащих более чем 200 блоков, генерация кода производиться только при наличии
      ключа регистрации программы.</p>
    <p>Схема используемая в данном примере содержит в себе 58 блоков, поэтому несмотря на
      предупреждения происходит генерация кода. В нижней часть схемного окна, выводятся сообщения о
      работе программы, как на рисунке 4.</p>
    <p><image href="c_fixed_point_images/image005.png" height="95" width="623"
        id="image_vlm_fjw_ry"/></p>
    <p>Рисунок 4. Сообщения генератора кода для схемы</p>
    <p>В результате работы данной генератора в директории с исходным проектом появляются новые
      файлы, содержащие исходные коды на Си созданные на основании схемы: </p>
    <p><b>fl_controller_fp.</b><b>h;</b></p>
    <p><b>fl_controller_fp.</b><b>inc</b><b>;</b></p>
    <p><b>fl_controller_fp.inc;</b></p>
    <p><b>fl_controller_fp_state.inc</b><b>;</b></p>
    <p><b>fl_controller_fp.h;</b></p>
    <p><b>fl_controller_fp_init.inc</b><b>. </b></p>
    <p>и файл с динамической библиотекой:</p>
    <p><b>fl_controller_fp.</b><b>dll</b></p>
    <p>Для сравнения расчетов с использованием фиксированной точки и плавающей точкой создадим код
      Си и динамическую библиотеку с использованием стандартного кодогенератора. Для этого в
      настройках кодогенератора (в главном меню программы пункт «<i>Кодогенератор</i>» в диалоговом
      окне выбрать закладку «<i>Настройки</i>») для директории шаблона кода выбрать в выпадающем
      меню строку: «<b><i>%codetemplates%MinGW_DLL\</i></b>» см. Рисунок 5.</p>
    <p><image href="c_fixed_point_images/image006.png" height="144" width="581"
        id="image_wlm_fjw_ry"/></p>
    <p>Рисунок 5 Настройки генерации стандартного кода с плавающей точкой</p>
    <p>Для получения второго варианта dll изменим наименования алгоритма в свойствах «Расчетная
      схема» на fl_controller, см. Рисунок 6</p>
    <p><image href="c_fixed_point_images/image007.png" height="299" width="579"
        id="image_xlm_fjw_ry"/></p>
    <p>Рисунок 6. Настройка имени файлов с тексами кода и dll</p>
    <p>В главном окне программы выберите пункт «<i>Инструменты</i>» подпункт «<i>Сгенерировать
        программу</i>». Будет запущен модуль генерации кода (в случае если модуль не
      зарегистрирован, будет выдано предупреждение).</p>
    <p>В результате работы данной генератора в директории с исходным проектом появляются новые
      файлы, содержащие исходные коды на Си созданные на основании схемы: </p>
    <p><b>fl_controller.</b><b>h;</b></p>
    <p><b>fl_controller.</b><b>inc</b><b>;</b></p>
    <p><b>fl_controller.inc;</b></p>
    <p><b>fl_controller_state.inc</b><b>;</b></p>
    <p><b>fl_controller.h;</b></p>
    <p><b>fl_controller_init.inc</b><b>. </b></p>
    <p>и файл с динамической библиотекой:</p>
    <p><b>fl_controller.</b><b>dll</b></p>
    <p>Для проверки работоспособности созданного кода расчета с фиксированной точкой и сравнения его
      стандартными средствами воспользуемся проектом <b>fuzzy_fix_point_dll_test.prt, </b>он
      находится в той же директории: “..\SimInTech\Demo\Automatic\Нечёткая Логика\Фиксированная
      точка\”.</p>
    <p>Расчетная схема верхнего уровня представлена на рисунке 7. На данной схеме в субмодели
      «РЕГУЛЯТОР НА БАЗЕ НЕЧЕТКОЙ ЛОГИКИ», находится расчетная схема регулятор аналогичная
      приведенной на рисунке 1 – исходной схемы для формирования кода и компиляции DLL.</p>
    <p>В блоке DLL настроен вызов в расчетной динамической библиотеки созданной из исходной
      расчетной схемы. Свойства блока DLL приведены на рисунке 8. Для тестирования можно менять имя
      вызываемой библиотеки (fl_controller.dll или fl_controller_fp.dll) для сравнения результатов
      расчета.</p>
    <p>На выход в блок DLL поступают значения, что и в субмодель регулятора выход блока сравнивается
      с выходом модели регулятора и разность выводиться на график.</p>
    <p><image href="c_fixed_point_images/image008.png" height="250" width="658"
        id="image_ylm_fjw_ry"/></p>
    <p>Рисунок 7. Схема модели для проверки работы кода вычисления с фиксированной точкой</p>
    <p><image href="c_fixed_point_images/image009.png" height="287" width="432"
        id="image_zlm_fjw_ry"/></p>
    <p>Рисунок 8. Свойства блока для загрузки библиотеки созданной кодогенератором</p>
    <p>При установления в качестве библиотеки варианта скомпилированного стандартным способом
        (<b>fl_controller.dll</b>), в процессе моделирования отличия в результатах работы dll и
      схемы не обнаружено. На графиках 0. В случае если в качестве dll, указана библиотека созданная
      на базе вычислений с фиксированной точкой (<b>fl_controller_fp.dll</b>), на графике появляться
      отклонения вызванные потерей точности расчёта. (см. Рисунок 9)</p>
    <p> </p>
    <p><image href="c_fixed_point_images/image010.png" height="323" width="444"
        id="image_amm_fjw_ry"/></p>
    <p>Рисунок 9. Отклонение расчета с фиксированной точкой</p>
    <p> </p>
  </body>
</topic>
