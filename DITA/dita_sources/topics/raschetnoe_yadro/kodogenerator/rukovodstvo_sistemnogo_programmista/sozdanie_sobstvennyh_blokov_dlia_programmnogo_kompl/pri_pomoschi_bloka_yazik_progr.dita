<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_x5n_gv5_qf">
  <title>Создание собственных блоков при помощи блока «Язык программирования»</title>
  <body>

              <p>Для создания собственных блоков при помощи блока «Язык программирования»
                необходимо:</p>
              <ul id="ul_kdk_ybt_qy">
                <li>
                  <p>вставить на схему блок типа «Язык программирования» из закладки
                    «Динамические»;</p>
                </li>
                <li>
                  <p>щёлкнуть по блоку двойным щелчком, откроется редактор скрипта для данного
                    блока;</p>
                </li>
                <li>
                  <p>в появившемся редакторе скрипта блока задать текст программы на встроенном
                    языке программирования для локального моделирования блока и для генерации
                    Си-кода для данного блока. Описание встроенного скриптового языка
                    программирования и основных его синтаксических конструкций доступно в справочной
                    системе ПК SimInTech;</p>
                </li>
                <li>
                  <p>закрыть окно редактора скрипта блока нажав на кнопку «Ok» в панели инструментов
                    редактора скрипта;</p>
                </li>
                <li>
                  <p>изменить имя типа блока и сохранить его в библиотеку, аналогично тому как это
                    делается при сохранении субмодели в библиотеку (см. предыдущий подраздел).</p>
                </li>
              </ul>
              <p>Для задания шаблона Си-кода для данного блока необходимо заполнить следующие
                текстовые свойства в списке свойств данного блока (это может делаться как через
                редактор свойств, так и через внутренний скрипт блока, т.е. свойство может
                динамически формироваться через скрипт):</p>
              <ul id="ul_ldk_ybt_qy">
                <li>
                  <p>Заголовок модуля – текст, включаемый в заголовочный файл (*.h) в
                    сгенерированном коде;</p>
                </li>
                <li>
                  <p>Секция декларации переменных – текст, включаемый для декларации локальных
                    переменных в подпрограмме RUN_FUNC шаблона расчётного модуля в самое её
                    начало;</p>
                </li>
                <li>
                  <p>Основная секция кода – текст, включаемый в порядке сортировки блока в
                    подпрограмме RUN_FUNC шаблона расчётного модуля в самое её начало;</p>
                </li>
                <li>
                  <p>Секция запоминания состояний – текст, включаемый в порядке сортировки блока в
                    подпрограмме STATE_FUNC шаблона расчётного модуля в самое её начало. Данный
                    текст вызывается всегда после RUN_FUNC;</p>
                </li>
                <li>
                  <p>Декларации переменных DBM – скрипт на встроенном языке программирования для
                    деклараций переменных, вносимых в файлы описание переменных и соответствующие
                    структуры в заголовочном файле. Для добавления своей переменной состояния или
                    внешней переменной необходимо в данном свойстве вызвать функцию:</p>
                </li>
              </ul>
              <p>AddVar(</p>
              <p> 0, // 0 - внешняя, 1 - динамическая, 2 - алгебраическая, 3 - внутренее состояние,
                4 - константа, 5 - локальная</p>
              <p> "%unikname%_my_global_external_var", //Имя переменной </p>
              <p> 0, // тип данных 0 - вещественная, 1 - двоичная, 2 - целая </p>
              <p> [1], //Размерность </p>
              <p> floattostr(1), //Значение по умолчанию</p>
              <p> "Внешняя переменная", //Описание переменной</p>
              <p>2); //Направление 0-вход, 1-выход, 2-двунаправленная</p>
              <p>если надо добавить несколько переменных, то AddVar пишется нужное количество
                раз;</p>
              <ul id="ul_mdk_ybt_qy">
                <li>
                  <p>Значения переменных по умолчанию – секция кода, включаемая в файл инициализации
                    начальных переменных (функция INIT_FUNC);</p>
                </li>
                <li>
                  <p>Код вычисления производных –текст, включаемый в порядке сортировки блока в
                    подпрограмме RUN_FUNC шаблона расчётного модуля в ветку, вызываемую по флагу
                    Action = f_GetDeri для вычисления производных динамических переменных;</p>
                </li>
                <li>
                  <p>Код вычисления алгебраических переменных –текст, включаемый в порядке
                    сортировки блока в подпрограмме RUN_FUNC шаблона расчётного модуля в ветку,
                    вызываемую по флагу Action = f_GetAlgFun для вычисления функций алгебраических
                    переменных. В приборах как правило расчёты систем нелинейных уравнений не
                    используются;</p>
                </li>
                <li>
                  <p>Код остановки задачи – текст, включаемый в порядке сортировки блока в
                    подпрограмме RUN_FUNC шаблона расчётного модуля в ветку, вызываемую по флагу
                    Action = f_Stop при полной остановке задачи.</p>
                </li>
              </ul>
              <p>В шаблонах кода могут использоваться следующие специальные символы, которые
                заменяются при генерации кода на нужные имена:</p>
              <table id="table_ndk_ybt_qy">
                <tgroup cols="2">
                  <colspec colnum="1" colname="col1"/>
                  <colspec colnum="2" colname="col2"/>
                  <tbody>
                    <row>
                      <entry>Спецсимвол</entry>
                      <entry>На что заменяется</entry>
                    </row>
                    <row>
                      <entry>%blockname%</entry>
                      <entry>уникальное имя блока в пределах данной схемы</entry>
                    </row>
                    <row>
                      <entry>%unikname%</entry>
                      <entry>уникальное имя в пределах всего проекта (&lt;префикс>&lt;имя
                        алгоритма>&lt;blockname>)</entry>
                    </row>
                    <row>
                      <entry>%input:&lt;номер порта>%</entry>
                      <entry>имя переменной порта входа блока (начиная с нуля)</entry>
                    </row>
                    <row>
                      <entry>%out:&lt;номер порта>%</entry>
                      <entry>имя переменной порта выхода блока (начиная с нуля)</entry>
                    </row>
                    <row>
                      <entry>%value:&lt;имя переменной>%</entry>
                      <entry>подстановка значения локальной (или глобальной переменной)</entry>
                    </row>
                    <row>
                      <entry>%prefix%</entry>
                      <entry>префикс имени переменных (v)</entry>
                    </row>
                    <row>
                      <entry>%step%</entry>
                      <entry>имя переменной "Шаг интегрирования"</entry>
                    </row>
                    <row>
                      <entry>%time%</entry>
                      <entry>имя переменной "Время", в секундах</entry>
                    </row>
                    <row>
                      <entry>%component%</entry>
                      <entry>имя расчётного модуля</entry>
                    </row>
                  </tbody>
                </tgroup>
              </table>
              <p>Пример заполнения через скрипт шаблонов генерации кода для блока «Язык
                программирования» можно посмотреть если вставить из библиотеки блок на схему.</p>
  </body>
</topic>
