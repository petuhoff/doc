<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_x5n_gv5_qf">
  <title>Задание настроек компиляции</title>
  <body>
    
              <p>Для настройки компилятора необходимо выполнить следующие действия:</p>
              <p>1) Вызвать рабочее окно «Инструменты автоматики» нажатием левой клавишей «мыши» на
                соответствующую кнопку главного меню, показано на рисунке 1.</p>
              <p><image href="rp-images/rp-4-2-ris-01.png" height="157" width="799"
                  id="image_dtc_rws_qy"/></p>
              <p>Рисунок 1</p>
              <p>2) Добавить файлы схем алгоритмов, сохранённые ранее на диске в список загружаемых
                в исполняемую среду задач. Для этого необходимо в окне «Инструменты автоматики»
                нажать левой клавишей «мыши» на кнопку «Добавить файлы» (рисунок 2а). После выбора
                файлов (рисунок 2б), их имена появятся в строках таблицы в закладке «Загрузка» окна
                «Инструменты автоматики».</p>
              <p>Исполняемая среда для приборов позволяет загружать в один прибор одновременно
                несколько различных расчётных модулей и выполнять их с разным тактом. При этом
                возможна загрузка одного и того же расчётного модуля, сгенерированного по единой
                схеме несколько раз с разным уникальным именем, при этом каждый из экземпляров
                расчётного модуля может быть подключен к разным сигналам. Каждой строке в таблице
                «Загрузки» соответствует вызов расчётного модуля, который сгенерировался по
                соответствующей схеме указанной в поле «Файл схемы». Имя исполняемого файла
                расчётного модуля, соответствующего данной схеме указывается в самом файле схемы
                («Параметры расчёта – Имя алгоритма»). Следует различать в данном случае имя
                алгоритма, заданное внутри схемы и поле «Имя алгоритма», заданное в таблице
                «Загрузки». По первому определяется имя файла расчётного модуля, а по второму –
                уникальное имя, по которому данный исполняемый файл загружается в исполняемой среде
                прибора. При этом если в поле «Имя алгоритма» в таблице «Загрузки» ничего не задано,
                то среда разработки в файл конфигурации загрузки в качестве имени алгоритма
                принимает имя исполняемого файла. Если же данное поле задано, то имя алгоритма не
                совпадает с именем исполняемого файла. Например, на рисунке 2в изображено, что
                расчётный модуль, сгенерированный по файлу схемы «Проект 2.prt» будет загружен 2
                раза, но под разными именами алгоритмов (algo1 и algo2), а расчётный модуль,
                сгенерированный по файлу «ШРП - штатный регулятор питания БС.prt», будет загружен
                один раз под именем алгоритма, соответствующем имени исполняемого файла, заданному в
                настройках проекта. При этом, для того чтобы загрузить один и тот же расчётный
                модуль под разными именами алгоритмов и привязать их к разным сигналам, необходимо
                задать имена сигналов в блоках типа «Входной контакт» и «Выходной контакт» в схеме
                соответствующего алгоритма с применением специального выражения %name%, которое при
                загрузке расчётного модуля в исполняемую среду прибора заменяется на имя алгоритма,
                заданное в поле «Имя алгоритма» в таблице «Загрузки» окна «Инструменты автоматики».
                Например, если вы в блоке «Входной контакт» примените имя сигнала %name%XB01, и
                укажите имя алгоритма в таблице загрузки Al , то при загрузке расчётного модуля
                данный блок будет подключен к сигналу A1XB01. При изменении имени алгоритма
                (например, добавлении нового, с той же схемой, но привязанного к другим сигналам)
                перекомпиляция самого расчётного модуля не требуется, требуется переписать только
                файл конфигурации загрузки (см. Руководство системного программиста).</p>
              <p><image href="rp-images/rp-4-2-ris-02a.png" height="259" width="317"
                  id="image_etc_rws_qy"/></p>
              <p>Рисунок 2а</p>
              <p><image href="rp-images/rp-4-2-ris-02b.png" height="434" width="975"
                  id="image_ftc_rws_qy"/></p>
              <p>Рисунок 2б</p>
              <p><image href="rp-images/rp-4-2-ris-02c.png" height="363" width="608"
                  id="image_gtc_rws_qy"/></p>
              <p>Рисунок 2в</p>
              <p>3) Настроить параметры вызова расчетных модулей на приборе. В закладке «Загрузка»
                рабочего окна «Инструменты автоматики» необходимо задать значения следующих
                параметров:</p>
              <p><b>Имя алгоритма</b>— имя алгоритма. Если имя алгоритма не заполнено, то оно
                принимается по умолчанию равным имени образа исполняемого файла. Если указанный
                исполняемый файл расчетного модуля планируется использовать в приборе многократно,
                то следует указать имя алгоритма (разное для разных объектов). Многократно, значит
                для обработки одинаковых по структуре алгоритмов может использоваться один
                сгенерированный расчётный модуль, при этом он запускается несколько раз, но
                подключается к различным внешним переменным для каждого из запущенных процессов;</p>
              <p><b>Период, мс</b>— период вызова расчетного модуля в миллисекундах;</p>
              <p><b>К-во вызовов </b><b>—</b> количество вызовов одного расчетного модуля за период
                вызова. Нужно если за период необходимо выполнить алгоритм последовательно несколько
                раз (если к-во вызовов больше 1), например это может понадобится для реализации
                итераций;</p>
              <p><b>Образ (exe)</b>— имя исполняемого файла расчетного модуля. Если файл проекта
                (например, Scheme.prt) задан, то параметр заполняется автоматически.</p>
              <p>Если указанный исполняемый файл расчетного модуля планируется использовать в
                приборе многократно, то следует указать имя алгоритма (разное для разных
                объектов).</p>
              <p><image href="rp-images/rp-4-2-ris-03.png" height="369" width="457"
                  id="image_htc_rws_qy"/></p>
              <p>Рисунок 3</p>
              <p>4) Выполнить настройку инструментов автоматики. Настройка инструментов автоматики
                производится в закладке «Настройки» рабочего окна «Инструменты автоматики», показано
                на рисунке 4:</p>
              <p><image href="rp-images/rp-4-2-ris-04.png" height="372" width="724"
                  id="image_itc_rws_qy"/></p>
              <p>Рисунок 4</p>
              <p>Параметры, которые следует определить:</p>
              <p><b>Имя конфигурации загрузки</b>— имя конфигурационного файла загрузки (указывается
                без расширения, по умолчанию default);</p>
              <p><b>Директория исходников</b>— путь сохранения сгенерированных программ (расчётных
                модулей);</p>
              <p><b>Директория шаблона кода</b>— настройка генерации программ, выбирается в
                зависимости от типа целевой операционной системы, приведено в таблице 1;</p>
              <p>Таблица 1</p>
              <table id="table_jtc_rws_qy">
                <tgroup cols="2">
                  <colspec colnum="1" colname="col1"/>
                  <colspec colnum="2" colname="col2"/>
                  <tbody>
                    <row>
                      <entry>Значение параметра</entry>
                      <entry>Примечание</entry>
                    </row>
                    <row>
                      <entry>%codetemplates%MinGW_DLL\</entry>
                      <entry>для компиляции динамически загружаемой библиотеки (dll) с расчетной
                        моделью для ОС Windows;</entry>
                    </row>
                    <row>
                      <entry>%codetemplates%MinGW_SampleApp\</entry>
                      <entry>для простой консольной программы для ОС Windows;</entry>
                    </row>
                    <row>
                      <entry>%codetemplates%QNX4\</entry>
                      <entry>для ОСРВ QNX версии 4;</entry>
                    </row>
                    <row>
                      <entry>%codetemplates%QNX6\</entry>
                      <entry>для ОСРВ QNX версии 6;</entry>
                    </row>
                    <row>
                      <entry>%codetemplates%VC2008\</entry>
                      <entry>для компиляции динамически загружаемой библиотеки (dll) с расчетной
                        моделью для ОС Windows. Для настоящего шаблона кода применяется компилятор
                        Visual C++ 2008.</entry>
                    </row>
                  </tbody>
                </tgroup>
              </table>
              <p><b>Имя блока в коде =</b>— правило формирования имён переменных для блоков
                расчетной схемы (алгоритма). Расшифровка значений параметра приведена в таблице
                2;</p>
              <p>Таблица 2</p>
              <table id="table_ktc_rws_qy">
                <tgroup cols="2">
                  <colspec colnum="1" colname="col1"/>
                  <colspec colnum="2" colname="col2"/>
                  <tbody>
                    <row>
                      <entry>Значение параметра</entry>
                      <entry>Примечание</entry>
                    </row>
                    <row>
                      <entry>Номер при сортировке</entry>
                      <entry>
                        <p>В качестве базы для имени внутренних переменных в генерируемом Си-коде
                          используются сквозные номера, присвоенные программным комплексом SimInTech
                          (ПК МВТУ 4) при сортировке расчетной схемы;</p>
                        <p>Примечание - При дополнении или изменении расчетной схемы внутренним
                          переменным будут присвоены новые номера.</p>
                      </entry>
                    </row>
                    <row>
                      <entry>Ограниченный md5-хэш (6 символов)</entry>
                      <entry>В качестве базы для имени внутренней переменной используются первые 5
                        символов от md5-хэш функции полного имени блока.</entry>
                    </row>
                    <row>
                      <entry>Транслитерированное имя</entry>
                      <entry>
                        <p>В качестве базы для имени внутренней переменной используется текстовое
                          имя в формате</p>
                        <p>&lt;имя субмодели>_&lt;имя блока></p>
                      </entry>
                    </row>
                    <row>
                      <entry>Полный md5-хэш (32 символа)</entry>
                      <entry>В качестве базы для имени внутренней переменной используются первые 32
                        символа от md5-хэш функции полного имени блока.</entry>
                    </row>
                    <row>
                      <entry>Ограниченный md5-хэш (12 символов)</entry>
                      <entry>В качестве базы для имени внутренней переменной используются первые 12
                        символов от md5-хэш функции полного имени блока.</entry>
                    </row>
                  </tbody>
                </tgroup>
              </table>
              <p><b>Стиль заголовка кода </b>— способ генерации заголовочного файла на языке
                программирования Си необходимого для автоматической привязки текстовых
                идентификаторов переменных к нужным адресам в памяти. Расшифровка значений параметра
                приведена в таблице 3;</p>
              <p>Таблица 3</p>
              <table id="table_ltc_rws_qy">
                <tgroup cols="2">
                  <colspec colnum="1" colname="col1"/>
                  <colspec colnum="2" colname="col2"/>
                  <tbody>
                    <row>
                      <entry>Значение параметра</entry>
                      <entry>Примечание</entry>
                    </row>
                    <row>
                      <entry>С внутренними таблицами переменных (DLL)</entry>
                      <entry>В заголовочный файл, на основе которого генерируется динамически
                        загружаемая библиотека или программа, встраиваются служебные таблицы с
                        указанием имён переменных, соответствующим им адресом в памяти и типом
                        данных (целый, вещественный и т.п.);</entry>
                    </row>
                    <row>
                      <entry>С внешними таблицами переменных (EXE)</entry>
                      <entry>В обрабатываемый компилятором заголовочный файл не пишутся служебные
                        таблицы с именами переменных. Служебные таблицы генерируются в бинарные
                        файлы, структура которых подробно описана в руководстве системного
                        программиста [2];</entry>
                    </row>
                    <row>
                      <entry>Автоопределение по ini-файлу в шаблоне кода</entry>
                      <entry>Опция позволяет автоматически выбирать тип генерации заголовочного
                        файла: с внутренними или внешними таблицами переменных в соответствии с
                        выбранным шаблоном кода. При этом в директории шаблона кода должен
                        присутствовать ini-файл, в котором в текстовом виде указывается
                        идентификатор способа определения генерации заголовочного файла.</entry>
                    </row>
                  </tbody>
                </tgroup>
              </table>
              <p><b>Команда сборки модуля</b>— текст вызова скрипт-файла (bat-файл), который
                производит автоматическую компиляцию расчетного модуля по сгенерированным
                кодгенератором исходным текстам;</p>
              <p><b>Команда загрузки в целевую систему</b>— текст вызова скрипт-файла (bat-файл),
                который производит загрузку скомпилированных расчетных модулей (программ) и других
                необходимых файлов на прибор;</p>
              <p><b>Префикс имён переменных</b>— символ, дописываемый в начало имени локальных
                переменных при генерации кода.</p>
              <p>5) Задать параметры отладчика. Параметры отладчика задаются в закладке «Отладчик»
                рабочего окна «Инструменты автоматики», показано на рисунке 5.</p>
              <p><image href="rp-images/rp-4-2-ris-05.png" height="370" width="461"
                  id="image_mtc_rws_qy"/></p>
              <p>Рисунок 5</p>
              <p>Параметры, которые следует определить:</p>
              <p><b>Режим отладки</b>— выбор способа расчета схемы (алгоритма). Расшифровка значений
                параметра приведена в таблице 4;</p>
              <p>Таблица 4</p>
              <table id="table_ntc_rws_qy">
                <tgroup cols="2">
                  <colspec colnum="1" colname="col1"/>
                  <colspec colnum="2" colname="col2"/>
                  <tbody>
                    <row>
                      <entry>Значение параметра</entry>
                      <entry>Примечание</entry>
                    </row>
                    <row>
                      <entry>Локальная</entry>
                      <entry>расчетная схема считается на рабочем месте разработчика (компьютере
                        пользователя) без доступа к прибору;</entry>
                    </row>
                    <row>
                      <entry>Удалённая</entry>
                      <entry>на расчетной схеме отображаются данные с прибора. Пользователь может
                        изменять параметры блоков, при этом происходит автоматическое изменение
                        соответствующей переменной на приборе;</entry>
                    </row>
                    <row>
                      <entry>Получать только входы</entry>
                      <entry>в режиме происходит только получение значений переменных входа/выхода
                        для расчетной модели. Все остальные переменные состояния рассчитываются
                        локальным ядром автоматики и не синхронизируются со значением переменных,
                        существующих в приборе.</entry>
                    </row>
                  </tbody>
                </tgroup>
              </table>
              <p><b>Режим изменения параметров</b> — опция, позволяющая изменить режим пересылки
                изменяемых пользователем параметров в прибор. Расшифровка значений параметра
                приведена в таблице 5;</p>
              <p>Таблица 5</p>
              <table id="table_otc_rws_qy">
                <tgroup cols="2">
                  <colspec colnum="1" colname="col1"/>
                  <colspec colnum="2" colname="col2"/>
                  <tbody>
                    <row>
                      <entry>Значение параметра</entry>
                      <entry>Примечание</entry>
                    </row>
                    <row>
                      <entry>Однократный</entry>
                      <entry>При изменении пользователем значения свойства блока на расчетной схеме
                        (например, коэффициента усиления инерционно-дифференцирующего звена)
                        происходит его однократное изменение на расчетной схеме с однократной
                        пересылкой на прибор;</entry>
                    </row>
                    <row>
                      <entry>Списочный</entry>
                      <entry>Графическая оболочка SimInTech (ПК МВТУ-4) программно составляет список
                        требуемых параметров, который на каждом расчетном шаге транслируется на
                        прибор.</entry>
                    </row>
                  </tbody>
                </tgroup>
              </table>
              <p><b>Параметры соединения (хост:порт)</b>— адрес сервера (прибора), например
                127.001:22375. Если номер порта после двоеточия не указан (или в параметрах
                соединения отсутствует), то по умолчанию номер порта равен 22375;</p>
              <p><b>Имя DLL удаленного доступа</b>— имя динамически загружаемой библиотеки,
                реализующей алгоритм получения данных от сервера отладки прибора GdbServer;</p>
              <p>Примечание: Пользователь не должен изменять значение параметра при использовании
                протокола передачи данных, реализованного в данной исполняемой среде.</p>
              <p><b>Имя объекта внутри DLL</b>— Имя модуля, которое обеспечивает связь ПО прибора с
                сервером отладки. Используется при необходимости создания поддержки собственного
                протокола передачи данных, отличающегося от заложенного в динамическую библиотеку
                avrordbg.dll.</p>
              <p><b>Имя состояния</b>— текстовый параметр, используемый для именованного сохранения
                состояния прибора (имя рестарта).</p>
              <p>6) Сохранить конфигурацию инструментов автоматики. Конфигурацию сохраняют нажатием
                левой клавишей «мыши» на кнопку «Сохранить конфигурацию» в рабочем окне «Инструменты
                автоматики» (показана на рисунке 6). Соответствующий файл лучше хранить вместе с
                файлами расчетных схем.</p>
              <p><image href="rp-images/rp-4-2-ris-06.png" height="368" width="475"
                  id="image_ptc_rws_qy"/></p>
              <p>Рисунок 6</p>
              <p>При генерации кода для целевой системы в генерируемый код добавляются комментарии,
                для возможности его анализа и сопоставления с исходной схемой. Для каждого из
                сгенерированных файлов добавляется в шапку комментарий, обозначающий, из какого
                именно файла был сгенерирован данный исходный текст:</p>
              <p>/* ------------------------------------------------------</p>
              <p> Routine name: calc</p>
              <p> Generated: 27.09.2011 11:44:36</p>
              <p> Description: </p>
              <p> Project file: ШРП - штатный регулятор питания БС.prt</p>
              <p>------------------------------------------------------ */</p>
              <p>Где: </p>
              <p><b>Routine name</b> – имя сгенерированного исполняемого файла расчётного
                модуля;</p>
              <p><b>Generated</b> – дата и время генерации;</p>
              <p><b>Description</b> – краткое текстовое описание проекта, заполняемое пользователем
                в параметрах расчёта;</p>
              <p><b>Project file</b> – имя исходного файла схемы, по которой был сгенерирован
                исходный текст.</p>
              <p>Также в исходном тексте для каждого из блоков схемы перед исходным текстом,
                описывающим данный блок, генерируется комментарий вида:</p>
              <p>/* Index=367</p>
              <p> UID=367</p>
              <p> GeneratorClassName=TLimitIntegrator</p>
              <p> Name=klap2.int</p>
              <p> Type=Интегратор с ограничением */</p>
              <p>Где:</p>
              <p><b>Index</b> – уникальный номер при сортировке блока (т.е. порядковый номер блока,
                который автоматически определяется математическим ядром). Номера блоков на схеме
                можно вывести при помощи пункта в главном меню «Вид-Показывать номера блоков». Для
                поиска блока по его UID необходимо нажать кнопку «Поиск блока» на главной панели
                инструментов программы и там пометить тип поиска «По индексу блока», ввести туда
                данный идентификатор, программа покажет блок в проекте. Примечание – номера блоков
                при изменении топологии модели могут меняться, поэтому если вы изменили схему и по
                старым исходникам ищете блок на ней, то поиск может быть неверным. ;</p>
              <p><b>UID</b> – уникальный идентификатор блока, который является базовым для
                формирования имён переменных состояния для данного блока. Способ вычисления
                идентификатора указывается в настройках генерации кода (см. таблицу 2). Для поиска
                блока по его UID необходимо нажать кнопку «Поиск блока» на главной панели
                инструментов программы и там пометить тип поиска «По тексту», ввести туда данный
                идентификатор, программа покажет все блоки, где встречается данное сочетание
                символов;</p>
              <p><b>GeneratorClassName</b> – имя класса генератора кода в исходном тексте генератора
                кода в файле</p>
              <p>&lt;директория установки>\source\MBTY\AVRORA_GEN\Blocks.pas</p>
              <p>По данному имени можно легко найти исходный текст, описывающий процесс генерации
                Си-кода для данного блока;</p>
              <p><b>Name</b> – полное имя блока, для которого был сгенерирован данный фрагмент кода.
                Оно формируется по следующему принципу:</p>
              <p>&lt;имя субмодели в которой стоит блок>.&lt;имя блока внутри субмодели></p>
              <p>где имя блока – поле «Имя объекта» (Name) в закладке «Общие» в редакторе свойств
                блока. Если блок стоит во вложенной структуре, то в полное имя через точку
                включаются все имена субмоделей начиная с самой верхней, к которым этот блок
                принадлежит. Таким образом, по полному имени на схеме можно однозначно найти данный
                блок, для которого сгенерирован фрагмент кода.</p>
              <p><b>Type</b> – это идентификатор типа блока, который берётся из параметра «Тип
                элемента» (ClassName) закладки, «Общие» в редакторе свойств блока.</p>
  </body>
</topic>
